<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruslan Osipov]]></title>
  <link href="http://www.rosipov.com/atom.xml" rel="self"/>
  <link href="http://www.rosipov.com/"/>
  <updated>2016-02-22T11:30:19-05:00</updated>
  <id>http://www.rosipov.com/</id>
  <author>
    <name><![CDATA[Ruslan Osipov]]></name>
    <email><![CDATA[ruslan@rosipov.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Living in a car for 5000 miles]]></title>
    <link href="http://www.rosipov.com/blog/living-in-a-car-for-5000-miles/"/>
    <updated>2016-02-22T11:27:52-05:00</updated>
    <id>http://www.rosipov.com/blog/living-in-a-car-for-5000-miles</id>
    <content type="html"><![CDATA[<p>I have set on my journey across the United States and back a few months ago.
It&rsquo;s a fun thing to do, and really gave me a breath of fresh air. I watched
elephant seals and whales on a California coast, spent what felt like days
stuck in LA traffic, ran from a blizzard, made it through a flash flood, passed
a tornado, celebrated New Year&rsquo;s on the road&hellip;</p>

<p>But don&rsquo;t let me get ahead of myself.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-with-the-hills-behind-it.jpg" title="Prius with a beautiful view on the hills behind it." ></p>

<h2>What&rsquo;s inside</h2>

<p>My path started in San Francisco Bay Area, a place I&rsquo;ve been lately calling
home. I tried out <a href="http://www.rosipov.com/blog/urban-prius-living/">living out of a Prius</a> before, thus not having a sturdy
place to call home wasn&rsquo;t really a shock. After only a few weeks I didn&rsquo;t feel
like anything is out of place - being on a road feels just as normal as renting
a house.</p>

<h3>Living areas</h3>

<p>First - the packing and organization. Just like in any living space, zoning is
important. Space inside a car is separated into 5 major areas:</p>

<ul>
<li>A driver&rsquo;s seat, used solely for driving. No other activities are permitted,
and the less time is spent in the driving seat - the better. This helps one
to stay alert when on a road.</li>
<li>Front passenger seat. There&rsquo;s not enough room to sit here due to the seat
being moved to the front all the way (to give the most space for the bed). I
usually just keep a backpack here (which I always take with me, so this area
stays empty when I&rsquo;m not in the car).</li>
<li>Rear passenger seat behind a driver. This is a primary seat for activities -
reading, fiddling around with a laptop, having some tea or a snack. A cooler
is taking up the leg space, but it&rsquo;s never a problem: in the wilderness I put
it outside, and nine times out of ten I don&rsquo;t want to sit with my legs down
(since that&rsquo;s the position I drive in).</li>
<li>A bed. Level surface, approximately 6 and a half feet long. Sleeping mat,
winter queen sized sleeping bag folded in two as a second mattress, a summer
sleeping bag, two pillows, and a plaid on top (for added coziness).</li>
<li>Additional cargo storage under the bed. Water supply, out-of-season clothes,
shoes.</li>
<li>Cargo area in the rear. A suitcase with food and clothes, toiletry kit, and
miscellaneous stuff. Some things I don&rsquo;t access often are in a secondary cargo
compartment Prius has underneath the cargo surface.</li>
</ul>


<p><img src="http://www.rosipov.com/images/posts/view-of-prius-interior-from-the-rear.jpg" title="View of the car interior with the rear door open: suitcase on the left, and a bed on the right." ></p>

<p>After about a week, moving between the areas within a car becomes surprisingly
easy and natural. I usually put on a hand break, lock the car, leave my shoes
in a driver&rsquo;s seat and move to the back sit or the bed.</p>

<h3>Food, water, and cooking</h3>

<p>Being prepared is essential for living on the road, so I keep a lot of food and
water in the car. I make it a rule of thumb to keep 6-8 3-liter water jugs in
the car, which amounts to 18-24 liters (5-6 gallons) of drinking water.</p>

<p>For boiling water I use <a href="http://amzn.to/1Pj5kpe">RoadPro Smart Car Pot</a>. I&rsquo;ll upgrade to something
better eventually, since it requires me to plan too far in advance - it takes
20-25 minutes to get water to boil.</p>

<p>I also have teabags and coffee with me. I used to have instant coffee, but it
tastes terrible compared to the real thing. Now I use a simple one-cup coffee
maker (the one where coffee drips through a funnel) to brew my pre-ground
coffee.</p>

<p>When it comes to food - I use rice, grains, and pasta as a base for some meals.
Canned goods like corn, peas, mixed veggies, pasta sauce, or chili add a nice
touch to the base. I heat up canned soups with a backpacking stove when I&rsquo;m not
in the mood for cooking whole meals or doing the dishes.</p>

<p><img src="http://www.rosipov.com/images/posts/making-dinner-in-the-dark.jpg" title="Making dinner in the dark." ></p>

<p>I have a <a href="http://amzn.to/1Pj5BbN">16-qt Stanley Adventure Cooler</a> which keeps items inside cold for
nearly three days (or practically indefinitely if I&rsquo;m up in the mountains where
it&rsquo;s cold). When I&rsquo;m preparing to be out in the wild, I fill it up with eggs,
meat, cheese, veggies, fruits, and berries.</p>

<p>In addition to everything listed above I always carry 6 days worth of MREs and
water in an <a href="http://amzn.to/1meZgWz">emergency backpack</a> underneath in the cargo compartment in case
I am ever stranded somewhere.</p>

<h3>Washing the dishes</h3>

<p>For cleaning my cookware I&rsquo;m using a backpacking approach I&rsquo;ve read about on
<a href="http://www.wikihow.com/Clean-Dishes-on-a-Camping-Trip#Spray_and_Wash_sub">WikiHow</a>. I spray the dishes with some natural cleaning solution, let them
sit for a bit, wipe it off with paper towels, and then thoroughly rinse
degreased dishes off in a 5-liter travel kitchen sink.</p>

<h3>Clothing</h3>

<p>Most of my clothing is pretty regular - pants, T-shirts, shirts, cardigans,
sweaters, jackets. However I did switch to using merino wool for all my base
layers: underwear, socks, compression tops and bottoms. While being
significantly more expensive, merino wool is much more comfortable to wear, and
it stays clean for much longer than normal clothes.</p>

<p>All the things I wear day to day fit in a backpack. When I stayed in New York
City for a few weeks without a car I had everything I needed in it:</p>

<p><img src="http://www.rosipov.com/images/posts/backpack-filled-with-stuff.jpg" title="Backpack filled with clothes." ></p>

<p>In addition to all of the above, I carry a few pairs of shoes and an additional
outer layer I wear when I anticipate to be near a campfire. That goes in a
storage bin under the bed.</p>

<h3>Laundry</h3>

<p>I started with visiting laundromats and just carrying a lot of coins with me.
But after a while, a number of items which require hand washing or delicate
care have increased - mostly due to above specified merino wool base layers.</p>

<p>I&rsquo;ve been looking for an excuse to try out <a href="http://amzn.to/1QdUGjt">Scrubba wash bag</a> I&rsquo;ve heard so
much about - basically a dry sack for washing clothes. I found it to be quite
convenient and not at all cumbersome to use.</p>

<p>While I still use laundromats for washing bulkier items, I hand wash my easy to
clean and quick to dry base layers.</p>

<h3>Sleeping</h3>

<p>A self-inflating sleeping pad and a winter queen-sized sleeping bag folded in
half create a great mattress. I sleep in a summer sleeping bag, with an added
sleeping bag liner and a few travel pillows.</p>

<p>I run AC in the car throughout the night. While keeping the temperature
pleasant, it tends to dry out the air and results in a major case of a sore
throat in a morning. I use a small travel humidifier which connects to a USB
power supply to regulate the humidity in the car at night.</p>

<h3>Entertainment</h3>

<p>Boredom seems to never be a concern with this lifestyle. I use laptop for rare
acts of writing, and a Kindle for reading during the little downtime I have. I
also have a little harmonica I hope I&rsquo;ll learn to play one day. And some
juggling balls I throw around once in a while.</p>

<h2>A few words on stealth</h2>

<p>While I enjoy staying at campsites, a large portion of my journey involved
staying in urban areas. Looking inconspicious is a big deal when you&rsquo;re relaxing
in a car - it&rsquo;s not fun when somebody comes knocking on your door (didn&rsquo;t happen
to me though).</p>

<p><img src="http://www.rosipov.com/images/posts/hiding-in-plain-sight.jpg" title="Hiding in plain sight between rental cars." ></p>

<p>The fact that it&rsquo;s a white-ish Prius helps a lot. Car dwelling is not a first
thing people think when they see a tiny city car parked on the side of the road.
Tinted windows (heavier tint in the rear, lighter in the front) are enough to
shield the dweller from the passers by. A blackout curtain separating the front
seats from the back area and covering rear windows is enough to cover one from
curious eyes peering inside the car.</p>

<p>Here&rsquo;s how the car looks in ful lighting with the curtains down, if you look
closely you can see the black fabric behind the seat backs. But most likely
you&rsquo;ll just pass the car:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-in-an-underground-parking-garage.jpg" title="Prius in an underground parking garage with the curtains down." ></p>

<p>Finding a place to stay boils down to four simple steps for me:</p>

<ol>
<li>Drive around in advance, find a place where it&rsquo;s easy to blend it. I prefer a
balance between empty and fully crowded lots. Avoid parking at a chosen area
until later in the evening.</li>
<li>Arrive late, hide in plain sight, park near similar cars. Don&rsquo;t tuck in
somewhere far and look suspicious.</li>
<li>Be respectful to whichever place you picked for the night. If possible, leave
it cleaner than it was when you arrived. Try not to be in and out of the car
too much either.</li>
<li>Leave early. Do not stay at one place multiple nights in a row. Avoid easily
recognizable patterns when returning to the same spot.</li>
</ol>


<h2>Final thoughts about my journey</h2>

<p>I traveled for an approximate of three weeks, and ended up hunkering down in New
York City for another month while leaving a car outside the city.</p>

<p>I gave up my apartment back in Bay Area for the duration of the travel, and it
feels liberating. It&rsquo;s comforting to know that one doesn&rsquo;t need to own a place
to live a happy and fulfilled life. Even further, living in NYC for weeks with a
single backpack worth of posessions and realising I don&rsquo;t need anything else was
an eye opening experience.</p>

<p><img src="http://www.rosipov.com/images/posts/beautiful-vista.jpg" title="Beautiful vistas I wake up to." ></p>

<p>Turns out I really don&rsquo;t need much stuff to enjoy life.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prius camper conversion]]></title>
    <link href="http://www.rosipov.com/blog/prius-camper-conversion/"/>
    <updated>2015-09-19T15:50:01-04:00</updated>
    <id>http://www.rosipov.com/blog/prius-camper-conversion</id>
    <content type="html"><![CDATA[<p>As requested, I took some detailed pictures of the
<a href="http://amzn.to/1NvY78S">Prius Camper Conversion Kit</a> I mentioned in my <a href="http://www.rosipov.com/blog/urban-prius-living">previous article</a>. It
adds valuable space to the back of the car when the seats are down, and helps to
push down the seats all the way in order to achieve a level surface. This
particular kit works for third generation of Prius, but can be slightly
modified to fit other models. In theory, something like this can work with any
car, as long as the rear seats can be forced down all the way to create a flat
surface (170 pounds of my bodyweight was enough to flatten out the seat back).</p>

<p>This is how the final conversion looks, with a mat cut to a custom shape on top
of it:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-final.jpg" title="This is how the final conversion looks." ></p>

<p>A wooden platform which is used to fill up rear leg space. Notice the blue
strap on the rear seat, that&rsquo;s what pushes down the seat to create a level
surface:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-with-the-mat-up.jpg" title="Wooden surface underneath the mat." ></p>

<p>The lid can be removed for storage space access:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-with-the-lid-off.jpg" title="Wooden platform with the lid off." ></p>

<p>It&rsquo;s a relatively thin wooden platform. Top (on the picture) side of it is a
bit slanted to fit on a rear seat back:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-platform-top.jpg" title="Top view of the wooden platform." ></p>

<p>View from the bottom: metal pieces are there to hold platform legs when the
platform is not in use, but I don&rsquo;t find them necessary. Additional (darker)
piece of wood is what the lid rests on:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-platform-bottom.jpg" title="Bottom view of the wooden platform." ></p>

<p>View from the side:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-platform-side.jpg" title="Side view of the wooden platform." ></p>

<p>With passenger front seat pushed all the way forward (and seat back in further
possible forward position), wooden supports are inserted into exposed seat
railing. I added some duct tape layers at the bottom of each leg so that they
don&rsquo;t wobble when the wooden platform is removed.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-legs.jpg" title="Wooden supports for the platform." ></p>

<p>Here&rsquo;s a right leg:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-legs-right.jpg" title="Right wooden support." ></p>

<p>I noticed that the left leg needed to be approximately 5 mm longer in order for
the platform not to wobble, so I extended it with whatever I had on hand:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-wooden-legs-left.jpg" title="Left wooden support." ></p>

<p>Adjustable belt with a hook on one side and a strap tie on the other:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-belt-with-a-hook.jpg" title="Belt with a hook." ></p>

<p>On the back side of rear seats there are places to secure a baby seat. I removed
the plastic covers (use some force), and attached a strap there. I added a piece
of cloth to (hopefully) prevent damage to seat fabric:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-belt-on-the-rear-seat.jpg" title="Belt on the rear seat." ></p>

<p>Tricky part is getting the bottom hook in the right place. Rear seats are held
in place by two metal locks. If you grab a rear seat from the bottom (when the
back is not folded) and pull up with approximately 50-100 pounds of force, the
seat will snap out of the place exposing the lock. Attach a hook to the exposed
part of the locking mechanism. Jump down on a seat to snap the rear seat back in
place. Exercise caution while you make your way through this, took me nearly an
hour to figure out how to properly attach a hook and snap the seat back in
place:</p>

<p><img src="http://www.rosipov.com/images/posts/prius-camper-bottom-hook.jpg" title="Bottom hook on the belt." ></p>

<p>When both sides of the belt are in place, fold the rear seat, push in down with
your body weight, and tighten the belt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Urban Prius living]]></title>
    <link href="http://www.rosipov.com/blog/urban-prius-living/"/>
    <updated>2015-09-18T15:55:00-04:00</updated>
    <id>http://www.rosipov.com/blog/urban-prius-living</id>
    <content type="html"><![CDATA[<p>Not so long ago I stumbled upon a blog titled <a href="https://chrissawey.wordpress.com/">&ldquo;Hotel Prius&rdquo;</a>, and I loved
the idea. Being a Prius owner myself, I decided to give Prius living a test run.
Being cautious person I am, I decided to give it a test run for a week in a
familiar area.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-in-a-corporate-area.jpg" title="A Prius." ></p>

<h2>Preparing for the journey</h2>

<p>First, I decided to tint my windows. In addition to making a Prius look much
more pleasant, it keeps the car cooler throughout the day, and most importantly
makes it hard to peek inside the car. Especially at night.</p>

<p>Next, I ordered a <a href="http://amzn.to/1NvY78S">Prius Gen III Camping Sleeper Conversion Kit</a>. It&rsquo;s just a
fancy name for two belts to push down the rear seats, and two wooden platforms
with detachable feet to cover leg space. And two custom cut carpet runners to
cover up the panels. Nothing one can&rsquo;t make in their own garage, if the money is
tight.</p>

<p>The kit requires front seats to be locked in the furthest possible position,
rendering them unusable. So I only installed a panel behind a passenger seat.
With the panel installed, I have nearly 7 feet of level surface to sleep on.</p>

<p>Another problem with the kit is that it blocks the console from being opened
(arm rest storage between driver and passenger seat). I stopped using console as
a quick access box, and it doesn&rsquo;t feel like a big loss.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-sleeping-platform.jpg" title="Sleeping platform. Laundry bag at the bottom." ></p>

<p>I packed all my clothes in a duffle bag, bought a small toiletries kit, and put
the rest of my belongings in a backpack. Queen-sized sleeping bag I had came in
handy as a bed (with a couple of travel pillows).</p>

<p><img src="http://www.rosipov.com/images/posts/prius-duffle-bag-and-a-sleeping-bag.jpg" title="Duffle bag with clothes and a sleeping bag." ></p>

<p>After a second night I swapped my sleeping bag with a lighter and more compact
summer sleeping bag. That&rsquo;s also when I added a 1.5 inch sleeping pad to my
inventory.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-in-a-sleeping-position.jpg" title="Prius in a sleeping position, with toiletries kit and a duffle bag on the left, sleeping bag on the right." ></p>

<p><img src="http://www.rosipov.com/images/posts/prius-bed-view-from-drivers-seat.jpg" title="View of a bed from the driver's seat." ></p>

<p>My backpack/briefcase is on the passenger&rsquo;s seat, I always take it with me.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-backpack-on-the-front-seat.jpg" title="Backpack on the passenger seat." ></p>

<p>In addition to all of the above, I took my guitar - even though it&rsquo;s bigger than
anything else I had to take with me, it&rsquo;s a great source of entertainment.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-guitar-and-bed-view.jpg" title="Guitar with a travel pillow on top, old backpack (now replaced)." ></p>

<p>If you&rsquo;re feeling impatient, links to all the items are at the bottom of the
post.</p>

<h2>Sleeping in a Prius</h2>

<h3>Night one</h3>

<p>First night in a Prius left me with mixed feelings. I parked in one of the
corporate areas of the city at about 9 pm. I picked a well lit parking lot with
some (but not much) evening traffic. I parked in one of the slightly darker
areas of the parking lot (approximately one out of twenty parking spots was
taken, and large number of cars made me feel safer).</p>

<p>It was 74F outside, slowly cooling after a 100F day. I left my car in accessory
mode (spoiler: bad idea), turned on the AC, locked the doors, and hopped on my
bedding arrangement to the back of the car. I didn&rsquo;t want to keep the windows
open since I just got them tinted. And sleeping with windows rolled down felt a
bit eerie.</p>

<p>First thing I noticed was how obnoxiously bright instrument panel and GPS are.
It was the opposite of stealthy, and it was plain annoying to sleep with those
bright lights on. I reached out for my duffle bag, and pulled out a couple of
towels to cover up both the instrument panel and GPS, as well as few AC control
LEDs. This made me feel at ease, and I tried to doze off into sleep.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-towels-on-instrument-panel.jpg" title="Towels covering an instrument panel and a GPS." ></p>

<p>The parking lot lights were a minor annoyance, mostly filtered out by a 20% rear
window tint. I&rsquo;ve heard some people pass somewhere within 20 feet of my car a
few times, but other than that it was quiet. Still, unfamiliar situation made it
hard to fall asleep.</p>

<p>And then a few voices and an engine noise disturbed my peace, pretty close to my
car. I waited for about 10 minutes, and the noise didn&rsquo;t go away. I raised my
head to see what&rsquo;s happening - turns out someone had a tire blowout a 2 parking
spots away from me, and a pickup truck pulled in next to them to help with
changing the tire. There were anywhere between 3 and 5 people walking around and
talking.</p>

<p>That&rsquo;s when I quickly got dressed, climbed to a driver&rsquo;s seat, and drove off to
look for a quieter spot. It was 9:55 pm.</p>

<p>I went to a more secluded, but still well lit parking lot behind one of the
offices. Concentration of cars was about the same, but it looked like those cars
were left there overnight. I picked a spot within 50 feet of other parked cars,
where a tree was covering my car from the harsh street light.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-parking-spot-by-the-tree.jpg" title="Parking spot by the tree." ></p>

<p>Accessory mode, AC, lock the doors. Climbed in the back, and after some
restlessness (a fairly normal thing for me), I fell asleep. I woke up sometime
around 11:30 pm. It was fairly hot in the car, and it was hard to breathe. Turns
out accessory mode turned itself off at some point. Maybe the battery ran low,
or maybe there&rsquo;s a time limit of sort. I opened all the doors to air out a car
for a couple of minutes while I walked around and stretched.</p>

<p>In the meantime, I also noticed that because of the tinted windows, it&rsquo;s nearly
impossible to see what&rsquo;s inside the car while only standing a few feet away
from it. That was comforting.</p>

<p>Second attempt, this time I turned on the car the usual way (by depressing the
pedal). I used a foot brake for a peace of mind, set the AC to 68 degrees (with
external air flow setting), locked the car, covered the instrument panel and a
GPS, and climbed in the back.</p>

<p>AC was blowing on my neck, but I was too tired to worry about it. The car cooled
down and I climbed inside a sleeping bag (it was too hot before, and I was just
lying on top of it). I&rsquo;m used to sleeping on hard surfaces, so the setup felt
comfortable enough. The light from surrounding light poles was a bit too harsh,
so I covered my eyes with a T-shirt. I fell asleep.</p>

<p>I woke up a few times throughout the night, but I feel like I&rsquo;ve had enough
sleep. I woke up with the sun at about 6:30 am, got dressed, opened all doors to
ventilate the car, packed away a sleeping bag, and drove to work. I felt well
rested, even though my throat and neck felt a bit sore from the AC directed at
me.</p>

<p>Oh, and it cost me $1.40 to have an AC running through the night. The car would
turn on for about a minute every once in a while (30 minutes?) to recharge the
battery.</p>

<h3>Night two</h3>

<p>This time, I found a perfect spot in a small parking lot behind an office. Less
crowded than the previous time, but still well lit. I got lucky and found a
space with no direct street light being visible when laying down.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-parked-in-a-small-lot.jpg" title="Prius parked in a small parking lot." ></p>

<p>Turn the car on, AC to 68 degrees, lock the doors, hop to the back seat.</p>

<p>I&rsquo;ve slept well for the first couple of hours, but I ended up waking up well
rested at midnight. I stopped by my office and worked for a couple of hours.
Back to the car to get 4 more hours of sleep.</p>

<p>It cost me $1.38 to camp through the night with AC on.</p>

<h3>Night three</h3>

<p>My sleeping bag was too hot to use at room temperature, so I swapped it with a
summer down filled bag. I also purchased a self-inflating sleeping pad for more
comfort.</p>

<p>Things are getting better from now on.</p>

<p><img src="http://www.rosipov.com/images/posts/prius-on-top-of-a-parking-garage.jpg" title="Prius on top of a parking garage." ></p>

<p>Feeling more confident, I found a four-story corporate parking lot and drove to
the top level. I parked at a well-lit spot without any direct lights coming
through the windows. I easily fell asleep a tad bit past nine, and woke up at 6
am refreshed and well rested. Secluded spot, comfortable sleeping pad, summer
sleeping bag, and increased confidence - all contributed to making sleeping in a
Prius a delightful experience.</p>

<p>This was also the night I learned a neat trick: if you recline the driver&rsquo;s seat
all the way, it becomes really easy to move between front seat and a sleeping
area.</p>

<p>Cost of running the car through the night: $1.63.</p>

<h3>Night four</h3>

<p>I decided to camp out in the same multi-level parking garage I did yesterday (it
has high enough number of cars so that I don&rsquo;t stand out - about one per fifty
parking spots; and the foot traffic is very low to non-existent). I found
another part of the garage with a roof access on a second level and pulled in
there. After getting situated, I realized I didn&rsquo;t account for all the lights -
bright parking lot lights from other levels ended up shining right in my face.
And even though I knew I couldn&rsquo;t be seen behind the tinted windows, it did
leave me feeling exposed.</p>

<p>I slid to the driver&rsquo;s seat and drove up a few levels to the previous spot.
Doors are locked, AC is set to 68F, instrument panel is covered, driver&rsquo;s seat
is reclined. I climbed to the back, and fell asleep.</p>

<p>It was a warm night, temperature outside was at 73F. It was hot enough for me to
wake up two times through the night, but that was a minor inconvenience.</p>

<p>Cost: $1.73.</p>

<h3>Night five</h3>

<p>It was one of the chillier nights, so sleeping was a very pleasant experience. I
picked the same spot I used on the third night. Absence of direct lights visible
from the car windows plays a huge role in making you feel safe.</p>

<p>Cost: $1.53 while also bringing Nexus 6 to a full charge.</p>

<h3>Night six</h3>

<p>Picked another spot in a similar area, I parked under a broken street light in a
well lit parking lot. I&rsquo;ve slept well. Mostly due to this being a cooler night
(65F).</p>

<p>Cost: $1.29 while also bringing Nexus 6 to a full charge.</p>

<h3>Night seven</h3>

<p>I was stuck in traffic in the evening, and I fiddled with the GPS for a while.
Turns out you can disable the obnoxiously bright screen by going into &ldquo;Setup&rdquo;
-> &ldquo;Display&rdquo; -> &ldquo;Screen off&rdquo;. Pushing any button on the GPS turns the screen
back on. I&rsquo;m still using the towels to cover up the instrument panel and AC
controls though.</p>

<p>Another fairly cold night, which made sleeping more comfortable. I went back to
the top of the parking garage. Night was a delight.</p>

<p>Cost: $1.39, with full Nexus 6 charging.</p>

<h3>Impressions</h3>

<p>Stealthy living in a Prius is very comfortable. With tinted windows there&rsquo;s just
enough privacy, it&rsquo;s safe and cheap to run AC through the night (cost averages
to about $1.48 per night). There&rsquo;s more than enough space for someone of my
height (5&#8217;11&#8221;). It took me a couple of days to get used to feeling relatively
exposed in public, but once I did - it was a breeze. Last five nights I have
slept without any problems.</p>

<p>Surprisingly, I&rsquo;ve slept better in a Prius than I did in my own bed. Here I
should probably note that I&rsquo;ve been having troubles sleeping on an off for some
time lately, and sleeping through the night in a car was a step up from where I
was before.</p>

<h3>Lessons learned</h3>

<p>Some things I didn&rsquo;t know before trying out sleeping in a Prius:</p>

<ul>
<li>Pick a well lit parking lot, ideally with some cars of similar value parked
overnight. Make sure there&rsquo;s not too much foot traffic.</li>
<li>Park in an area without direct light source near you. Also account for lights
visible from inside the car (light nearly a hundred feet away can still be
bother).</li>
<li>If you&rsquo;re using the AC, turn Prius engine on instead of leaving it in
accessory mode.</li>
<li>Proper AC vent direction is important. Fiddle with those until there are no
drafts in the sleeping area.</li>
<li>Use a sleeping mask to avoid being bothered by the lights if you couldn&rsquo;t find
area without visible light sources shining directly through the windows.</li>
<li>Since the temperature inside the car is regulated, summer sleeping bag is a
must.</li>
<li>Sleeping pad is very helpful in making the surface softer. 1.5 inches made a
huge difference in comfort.</li>
</ul>


<h2>Items I used</h2>

<p><img src="http://www.rosipov.com/images/posts/prius-storage-compartment.jpg" title="Storage compartment. Left to right, top to bottom: a travel pillow, miscellaneous items storage box, sleeping pad, sleeping bag, a book (I'm not an avid reader these days), emergency supplies backpack, 10000 mAh power bank, paper towels." ></p>

<p>Here are the items directly related to the trip which I either purchased or
already owned.</p>

<ul>
<li><a href="http://amzn.to/1NvY78S">Prius Gen III Camping Sleeper Conversion Kit</a>. While not as good of a fit
as something one can make with a garage and a set of tools, it&rsquo;s a quick (but
rather expensive, depending on your situation) solution.</li>
<li><a href="http://amzn.to/1NvXpbA">eBags TLS Mother Lode Weekender Convertible Junior</a>.</li>
<li><a href="http://amzn.to/1iFj0Sb">Kelty Cosmic 550 Dridown Sleeping Bag, Regular/41-Degree</a>. I started a
journey with a sleeping bag I already had around - winter
<a href="http://amzn.to/1Nw0clb">Coleman Calgary Cold-Weather Scoop Sleeping Bag</a>. Needless to say, Kelty
Cosmic 41 is lighter, and by far more compact.</li>
<li><a href="http://amzn.to/1imaIyz">Therm-a-Rest ProLite Plus Sleeping Pad</a>. It&rsquo;s a 1.5 inch tall matress, I
found it to be extremely comfortable.</li>
<li><a href="http://www.rei.com/product/870768/rei-roadtripper-duffel-medium">REI Roadtripper Duffel - Medium</a>. I don&rsquo;t have too many clothes (and I
live in California, taking winter clothing is out of the picture), so
everything fits in a duffel bag.</li>
<li><a href="http://amzn.to/1K5CQPv">Eagle Creek Pack-It Clean/Dirty Cube</a>. Holds underwear and socks, also
doubles as a sealed laundry bag for both.</li>
<li><a href="http://amzn.to/1imbiMJ">Therm-a-Rest Compressible Travel Pillow, Medium</a>. A comfortable pillow
which goes under a sleeping bag.</li>
<li><a href="http://www.rei.com/product/878299/rei-grande-shower-kit-black">REI Grande Shower Kit</a>. It&rsquo;s fairly big and holds all my toiletries.</li>
<li><a href="http://amzn.to/1iFkJqF">Ready America Emergency Kit, 2-Person, 3-Day Backpack</a>. Something I always
have in a car for the peace of mind.</li>
</ul>


<h2>Future improvement ideas</h2>

<p>I have a great stealthy setup, but having more privacy would&rsquo;ve been a nice
bonus. I&rsquo;ll probably look for some inconspicuous looking shades or curtains,
provided that the setup doesn&rsquo;t look too obvious.</p>

<h2>Philosophical implications</h2>

<p>This was an interesting experience. Inability to retreat to the safety of my
house got me out of my comfort zone. Initial discomfort passed quickly, and a
world of possibilities opened up to me.</p>

<p>Not having access to a house made me, well, feel bored. And that&rsquo;s amazing.
Without having an ability to default to a TV, gaming platform, or even a laptop
(it&rsquo;s really not that comfortable to work on a laptop in a car) - I had to get
creative. I got to play a guitar, a piano, sing, practice with a drum set. I
worked on my blog (this article took multiple revisions and hours upon hours of
time to look the way it does now). I went to Mozzart&rsquo;s Don Giovanni publicly
hosted in a nearby town.</p>

<p>And I finished this article, which took me about 8 days of revisions and
additions to finish.</p>

<p>Now, thanks to self-imposed restrictions, I&rsquo;m doing all the things I wanted to
do.</p>

<p>I&rsquo;m a perpetual planner. And that sometimes becomes a problem, since I&rsquo;m always
looking forward to the next thing that&rsquo;s going to happen, sometimes not paying
attention to life right in front of me. With everything I have packed in a car,
there&rsquo;s nothing on the horizon. Nothing is far away. There&rsquo;s no home to go back
to, so I don&rsquo;t rush anywhere. I savor every moment I have.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My experience with minimalism]]></title>
    <link href="http://www.rosipov.com/blog/my-experience-with-minimalism/"/>
    <updated>2015-07-18T15:54:36-04:00</updated>
    <id>http://www.rosipov.com/blog/my-experience-with-minimalism</id>
    <content type="html"><![CDATA[<p>Minimalism was always appealing to me. The philosophy of not having more than
one would need is close to my heart. Over the past few years, I&rsquo;ve been
&ldquo;trimming the fat&rdquo; off various parts of my life.</p>

<p>I can&rsquo;t recall when I started being drawn to a minimalistic lifestyle. I think
my passion for minimalism originates in my desire for organization and order.
It&rsquo;s comforting to know that a world around me has a certain structure.</p>

<p>I remember the time when I started living on my own. I just moved to United
States, away from my family. All my life fit in a half-empty suitcase at that
time. Few sets of clothes, a blanket, a pillow, some hygiene products, a small
laptop. Moving to a new place was as easy as throwing few things in that
suitcase.</p>

<p>After some time, I started accumulating more things. A guitar. More variations
of clothing. Cheap coffee table and a shoe rack from a dollar store. At that
time I rented a room in one of the shady areas of the city. Adding a few pieces
of furniture made a place feel like home.</p>

<p>Time has passed, and I moved again. Left the furniture behind, took the rest.
Still light, but I did have to make a few trips to move everything I needed. I
got even more comfortable. A gaming PC. Significantly more junk here and there.</p>

<p>That&rsquo;s when I did my first big cleanup. I went through every item I owned, and
tossed it a trash bag if I didn&rsquo;t use it in the past 6 month. Old clothes, some
action figures, other useless junk I accumulated. As a result, I tossed two big
bags of stuff I didn&rsquo;t need. I still remember the liberating feeling. Knowing
that everything I own serves a purpose.</p>

<p>It felt like I could breathe again.</p>

<p>Years pass. I don&rsquo;t rent rooms anymore, but apartments, houses. This comes with
having to own more things. Real furniture. A TV. More musical instruments.
Having to accommodate guests. Cooking supplies. A bike. Outdoor furniture.</p>

<p>But I&rsquo;ve kept the minimalistic mindset, and I still do periodical clean outs.
Tossing almost everything I haven&rsquo;t used in a past six months. Reducing what I
own only to things that I need to have comfortable and enjoyable living.</p>

<p>Today, I don&rsquo;t think I can fit everything I own in that single suitcase. Hell, I
most certainly will need to hire a truck for my next move. But that&rsquo;s not
important. Minimalism isn&rsquo;t about the absence of things. If you feel like you
don&rsquo;t have enough - you&rsquo;re probably doing something wrong. Minimalism is about
not being excessive.</p>

<p>For me, knowing that my belongings serve a purpose makes me feel content,
clear-headed. It&rsquo;s comforting. It feels right.</p>

<p>Sometimes, I forget and start accumulating stuff. And that&rsquo;s when I go back to
reducing again. It&rsquo;s not an obsession, but a healthy periodical maintenance.
Often it takes months, or even years to get rid of certain things.</p>

<p>Replace a queen sized bed with a Japanese futon mat. Digitalize the growing
paper trail I keep. Travel the world for with a single suitcase.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Profiling slow bashrc]]></title>
    <link href="http://www.rosipov.com/blog/profiling-slow-bashrc/"/>
    <updated>2015-07-15T13:07:53-04:00</updated>
    <id>http://www.rosipov.com/blog/profiling-slow-bashrc</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently noticed that it takes a long time for my bash to load. I&rsquo;ve found
<a href="http://stackoverflow.com/a/5015179/2578489">following StackOverflow answer</a> to be useful, and I based my solution to find a
startup time hog in my <code>~/.bashrc</code> upon it.</p>

<p>First off, add following few lines to your <code>/etc/bash.bashrc</code>,
<code>~/.bash_profile</code>, or wherever you&rsquo;d like to begin tracing the script:</p>

<pre><code>PS4='+ $(date "+%s.%N")\011 '
exec 3&gt;&amp;2 2&gt;/tmp/bashstart.$$.log
set -x
</code></pre>

<p>And add following few lines where you want to stop the trace:</p>

<pre><code>set +x
exec 2&gt;&amp;3 3&gt;&amp;-
</code></pre>

<p>Now start your bash session (you can simply open a new terminal Window for
that). The above will create <code>/tmp/bashstart.&lt;PID&gt;.log</code>. To analyze it, I wrote
a little Python script:</p>

<pre><code>import argparse
import heapq

parser = argparse.ArgumentParser(description='Analyze bashstart log for speed.')
parser.add_argument('filename', help='often /tmp/bashstart.&lt;PID&gt;.log')
parser.add_argument('-n', default=20, help='number of results to show')
args = parser.parse_args()
filename, n = args.filename, int(args.n)

with open(filename, 'r') as f:
    q = []
    prev_time = None
    for line in f.readlines():
        line = line.split()
        if '+' not in line[0] or len(line) &lt; 3:
            continue
        text = ' '.join(line[2:])
        seconds, nanoseconds = line[1].split('.')
        time = int(nanoseconds)
        diff = time - prev_time if prev_time is not None else 0
        prev_time = time
        heapq.heappush(q, (diff, text))

for diff, text in heapq.nlargest(n, q):
    print float(diff) / 1000000000, 's:', text
</code></pre>

<p>Save it as <code>bashprofile.py</code>, and run it as follows (replace file name with an
appropriate):</p>

<pre><code>python bashprofile.py /tmp/bashstart.2831.log -n 20
0.050056909 s: _powerline_init_tmux_support
0.045323022 s: _powerline_setup_prompt
0.044722024 s: _powerline_setup_prompt
0.044423727 s: '[' -f /usr/local/google/home/ruslano/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh ']'
0.044364097 s: '[' -f /usr/local/google/home/ruslano/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh ']'
0.044137159 s: _powerline_init_tmux_support
0.015839574 s: __shell_name=bash
0.010850276 s: command which which
0.010105462 s: PS2='\[\]  \[\] \[\]'
0.010000598 s: PS3=' Select variant  '
0.009837956 s: complete -F _svn -o default -X '@(*/.svn|*/.svn/|.svn|.svn/)' svn
0.009767517 s: PS2='\[\]  \[\] \[\]'
0.0095753 s: PS3=' Select variant  '
0.007915565 s: other_utils=(ant automake autoreconf libtoolize make mount patch readlink)
0.00771205 s: for script in version functions/selector cd functions/cli cli override_gem
0.007008299 s: for gnu_util in '"${gnu_utils[@]}"'
0.00693653 s: complete -F _crow crow
0.006803049 s: complete -F _svn -o default -X '@(*/.svn|*/.svn/|.svn|.svn/)' svn
0.006672906 s: for script in version functions/selector cd functions/cli cli override_gem
0.005912399 s: for entry in '${scripts[@]}'
</code></pre>

<p>In my example, <a href="https://github.com/powerline/powerline">Powerline</a> turned out to be a massive hog. Looks like I&rsquo;ll
have to troubleshoot the speed or plain disable it.</p>

<p>Don&rsquo;t forget to remove the lines you added to your bash configuration files
after you&rsquo;re done profiling.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DidYouMean plugin for Vim]]></title>
    <link href="http://www.rosipov.com/blog/didyoumean-plugin-for-vim/"/>
    <updated>2015-06-10T16:02:00-04:00</updated>
    <id>http://www.rosipov.com/blog/didyoumean-plugin-for-vim</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/EinfachToll/DidYouMean">DidYouMean</a> Vim plugin is very simple: it asks you if the file you are
trying to open is indeed the right file. How is this useful? Here&rsquo;s how:</p>

<p><img src="http://www.rosipov.com/images/posts/vim-plugin-didyoumean.png" title="DidYouMean plugin in action." ></p>

<p>Say you have two files with a similarly starting names: <code>model.py</code> and
<code>model_test.py</code>. You type <code>vim mo</code>, you hit tab to autocomplete the name, you
hit enter. In vanilla Vim, you&rsquo;d be opening a new file: <code>model</code>, since that&rsquo;s
where shell&rsquo;s tab-completion stopped. DidYouMean detects such a nuance and asks
you if you wanted to open <code>model</code>, <code>model.py</code>, or <code>model_test.py</code>.</p>

<p>Simple idea, and instantly after trying this out, I would really expect this
feature to be included in vanilla Vim.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lessons learned: engineering productivity]]></title>
    <link href="http://www.rosipov.com/blog/lessons-learned-engineering-productivity/"/>
    <updated>2015-06-08T18:03:58-04:00</updated>
    <id>http://www.rosipov.com/blog/lessons-learned-engineering-productivity</id>
    <content type="html"><![CDATA[<p>I enjoy optimizing the way I work: the less time I can spend on something
without sacrificing quality - the better. Below are few ideas on the subject of
engineering productivity I&rsquo;ve successfully applied in my career.</p>

<h2>Don&rsquo;t work long hours</h2>

<p>A fascinating paper was released in 2011 by a group of Israeli researchers, who
studied the factors which affect if prisoners were given a parole or not
(source: <a href="http://www.pnas.org/content/108/17/6889.abstract">Extraneous factors in judicial decisions</a>.</p>

<p>First prisoner in a morning has approximately 65% chance of being released. With
every next case, the chance dropped significantly, reaching nearly 0% starting
with the third case. After returning from a lunch break, odds of a prisoner
being released went back up to 65%. And once again, with each new prisoner the
odds decline rapidly.</p>

<p><img src="http://www.rosipov.com/images/posts/israeli-parole-study.gif" title="A graph of favorable parole decisions given by the judges." ></p>

<p>Authors of the paper suggest that making decisions depletes a limited mental
facility. People start looking for shortcuts and making mistakes.</p>

<p>Working long hours is something we&rsquo;ve all done more than once. Be it an upcoming
deadline, fascinating problem, or a personal project. The problem with working
too long is that you&rsquo;re doing a poor job without realizing it.</p>

<p>I try to avoid working more than 7 hours a day, and there are people who get an
incredible amount of work done under an even shorter amount of time.</p>

<p>This is probably explained by a phenomenon called &ldquo;ego depletion&rdquo;: the idea that
self-control or willpower draw upon a pool of limited mental resources that can
be used up. When the energy for mental activity is low, self-control is
typically impaired, which is what is considered to be a state of ego depletion.</p>

<h2>Dangers of burning out</h2>

<p>Another problem with working too long - is a possibility of a burnout.</p>

<p>A while back I worked as a freelancer for a client of mine. I worked long hours
from home office. This was my first time working from home for such a long
period of time, and I made a number of mistakes in the beginning. One of which
was working too much.</p>

<p>I&rsquo;ve put in a number of 12-hour marathons in order to get more work done. I was
on call most of the time. I became overwhelmed with all the work I had to get
done. I started losing interest in work and feeling like things are getting out
of my control. Every day felt like a bad day.</p>

<p>Those are the symptoms of a burnout. Feeling of life spinning out of control
and feeling like nothing you do makes any impact.</p>

<p>I broke out of a mental prison of a burnout by getting a better work-life
balance, enforcing exercise routine, and never working more than 8 hours a day.
7 in most cases.</p>

<h2>Work-life balance</h2>

<p>Another thing I learned from working from home is how to keep a work-life
balance. Not having a separate office and living in a 1-bedroom apartment with
my wife, I had to barricade myself in a far corner of a bedroom and turn it into
a physically separated office space. That was the space I worked in, and it
remained empty after I was done and until I started the next work day.</p>

<p>Work-life balance deserves a special say: it&rsquo;s the difference between doing an
amazing job and going insane. Set aside time and place for work, and never allow
a bleed-through. Don&rsquo;t be on call if you can avoid it. Don&rsquo;t open or reply to
work-related emails at your spare time. Office is for work and home is for
family.</p>

<h2>Distraction-free environment</h2>

<p>Everybody is aware that interruptions hamper productivity, but not everyone
actively avoids interruptions during work. Replying to a text message, quickly
checking your social network notifications, or looking up that one thing you&rsquo;ve
been forgetting to look up for days - all of this impairs your mental ability to
complete the task within a desired time frame and, more importantly, with high
quality.</p>

<p>According to various studies it takes from 20 to 30 minutes to get regain the
same level of concentration and productivity after a single act of disruption. A
<a href="http://hfs.sagepub.com/content/56/7/1262">2014 study from George Mason University</a> found that students composed lower
quality essays when interrupted only a few times throughout both planning and
writing phases. Distracted students performed considerably worse, even though
they were given additional time to complete an assignment in order to make up
for the interruptions.</p>

<h2>Know your tools</h2>

<blockquote><p>Use a single editor well</p></blockquote>

<ul>
<li><a href="http://amzn.to/1B1PWw8">Pragmatic Programmer</a>, Tip #22.</li>
</ul>


<p>This is lower level tip than the rest, but something I find utterly important in
my daily work. We, the software engineers, spend at least half the time editing
some sort of text - code, email, documentation. Taking time to improve the
knowledge of the software you use every day pays off.</p>

<ul>
<li>Using Gmail? Learn the keyboard shortcuts.</li>
<li>Use Eclispe? Do the same. Search for plugins which can make your everyday work
faster and easier.</li>
<li>Use command shell for daily work? Practice your shell scripting skills, find
the tools that let you do more work with lesser amount of typing.</li>
<li>Pick up touch typing. It&rsquo;s also a part of your toolbox. Why think about keying
words in? Lower error rate while typing - you need to go back less.</li>
</ul>


<p>For instance, I do all my work in shell. I use <a href="http://tmux.sourceforge.net">Tmux</a> for creating and
navigating multiple sessions. I use Vim for all my editing needs - code,
documentation, blogging, composing long emails (via <a href="http://www.mutt.org">Mutt</a>). I touch type, so
working in a text mode is easy.</p>

<p>Over the years I accumulated aliases for all the frequently used shell commands.
All the Vim and Tmux shortcuts are a part of a muscle memory. Jumping from file
to file or from one place to another within a file doesn&rsquo;t take any mental
effort and is accomplished with only a couple of keystrokes.</p>

<p>By eliminating the need to think about or spend too much time working with low
level concepts - you free up the mental bandwidth for higher level reasoning and
problem solving.</p>

<h2>Read, don&rsquo;t stop learning</h2>

<p>As per DeMarco and Lister, authors of
<a href="http://amzn.to/1D2csza">&ldquo;Peopleware: Productive Projects and Teams&rdquo;</a> - one book is more than most
programmers read each year. This is the same point Steve McConnell&rsquo;s
<a href="http://amzn.to/1D2cB5K">&ldquo;Code Complete&rdquo;</a> emphasizes.</p>

<p>A lot of programmers don&rsquo;t read books. A few even don&rsquo;t follow relevant blogs
or websites. Don&rsquo;t do what software engineers had to do in the olden days:
coding by error in isolation from the rest of the industry. Read a book, learn
something you don&rsquo;t know about. A single book read from beginning to end
contains wider array of information compared to disjointed articles some
programmers limit themselves to.</p>

<p>As Jeff Atwood suggests in his article
<a href="http://blog.codinghorror.com/programmers-dont-read-books-but-you-should/">&ldquo;Programmers Don&rsquo;t Read Books - But You Should&rdquo;</a>, pick up one of the
timeless books - not affected by changing technologies and processes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gundo tree for Vim]]></title>
    <link href="http://www.rosipov.com/blog/gundo-tree-for-vim/"/>
    <updated>2015-06-07T16:10:15-04:00</updated>
    <id>http://www.rosipov.com/blog/gundo-tree-for-vim</id>
    <content type="html"><![CDATA[<p>One of the obscure, but tremendously useful features of Vim is an undo tree.
You would expect Vim to have a simple stack for undo and redo actions, but it&rsquo;s
much more complex than that: Vim keeps track of every change you made in the
current session, making it possible to access change history beyond basic <code>u</code>
and <code>C-r</code> commands.</p>

<p>Default interface for accessing far out branches of the undo tree leaves to be
desired, but that&rsquo;s where <a href="http://sjl.bitbucket.org/gundo.vim/">Gundo</a> comes in.</p>

<p><img src="http://www.rosipov.com/images/posts/vim-gundo-tree.png" title="Gundo tree in Vim." ></p>

<p>Gundo provides an easy to use interface for navigating history branches. In the
screenshot above, I am previewing a diff in one of the undo tree branches
inaccessible via <code>u</code> command.</p>

<p>As per author&rsquo;s recommendation, I mapped the plugin to <code>F5</code>, which seems quite
convenient to me:</p>

<pre><code>nnoremap &lt;F5&gt; :GundoToggle&lt;CR&gt;
</code></pre>

<p>Usage is quite easy. <code>F5</code> opens or closes the undo tree, <code>j</code> and <code>k</code> are used
to travel through changes. Enter key applies the changes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My experience switching to buffers]]></title>
    <link href="http://www.rosipov.com/blog/my-experience-switching-to-buffers/"/>
    <updated>2015-06-01T09:28:42-04:00</updated>
    <id>http://www.rosipov.com/blog/my-experience-switching-to-buffers</id>
    <content type="html"><![CDATA[<p>About a year ago I stumbled upon an article explaining the difference between
Vim tabs and buffers. The author emphasized that tabs are merely window
layouts, and therefore one-file-per-tab idea I was used to at the moment just
wasn&rsquo;t proper. Instead, author suggested the use of buffer commands to switch
between multiple files. I decided to give it a shot, and here are some ideas I
would like to share after switching to the use of buffers.</p>

<p>Buffers are open files (they also may not be associated with any files), but
they&rsquo;re not necessarily visible at any given moment. In Vim, windows are not
linked to any particular buffer, so you can easily cycle through buffers from
within any window.</p>

<p>First and foremost, you probably want to add <code>set hidden</code> to your <code>.vimrc</code>.
This option lets you switch between buffers without having to save files.</p>

<p>At it&rsquo;s basics, you only need few commands for operating buffers:</p>

<ul>
<li>Use <code>:ls</code> to list all buffers for this session.</li>
<li>To move between next and previous buffers use <code>:bn</code> and <code>:bp</code> respectively.</li>
<li>Use <code>:b partial_buffer_name</code> for navigating to the buffer of your choice.
Buffer name auto-complete is supported.</li>
<li>You can also use <code>:bN</code>, where <code>N</code> is a buffer number to jump to a specific
buffer.</li>
<li>Get in a habit of closing buffers you will not use with <code>:bd</code>.</li>
</ul>


<p><img src="http://www.rosipov.com/images/posts/vim-list-buffers.png" title="A list of open buffers in Vim." ></p>

<p>The hardest thing about stopping to use tabs and switching to buffers instead
is not having the visual aid: I was used to having a list of files always
available at a glance, at the top of my screen. To check what files I&rsquo;m working
on now - I have to hit four keys: <code>:ls</code> (fourth being &ldquo;Enter&rdquo;).</p>

<p>Not surprisingly, this taught me to be more mindful about my editing
experience. I usually have a clear structure of the files I&rsquo;m working on in my
head. And if the list is getting to long to easily remember, then I&rsquo;m probably
doing something wrong: time to take a break and reset my Vim session.</p>

<p>The experience overall reminded me of my recent switch to blank keyboard key
caps: with no inscriptions to aid you, I first felt a bit at loss, especially
with they keys I couldn&rsquo;t find without looking: like function keys or special
symbols. But after some time with the blank key caps, I improved my typing
skill, and know where even the most obscure characters hide. The switch helped
me to improve my typing experience overall.</p>

<p>With Vim, it&rsquo;s a similar story. After getting past the initial confusion, I
achieved high level of awareness about my editing sessions. It didn&rsquo;t make the
editing process any faster, but instead much more satisfying.</p>

<p>But you already new that, since Vim isn&rsquo;t really about speed.</p>

<p>UPDATE: Made a few corrections and added a <code>:b partial_buffer_name</code> command
thanks to <a href="http://www.reddit.com/user/___violet___">/u/___violet___</a>&rsquo;s <a href="http://www.reddit.com/r/vim/comments/382v6q/my_experience_switching_to_buffers/crrunni">Reddit comment</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Impact-driven development]]></title>
    <link href="http://www.rosipov.com/blog/impact-driven-development/"/>
    <updated>2015-04-25T21:19:58-04:00</updated>
    <id>http://www.rosipov.com/blog/impact-driven-development</id>
    <content type="html"><![CDATA[<p>It is my fifth year working as a professional software engineer, and I think
it&rsquo;s a good time for me to share a few tips, dos, and don&#8217;ts I learned
throughout past four years. This is the first article in a series of three,
and it focuses on development process.</p>

<p>Moving towards becoming a senior engineer, I noticed paying more attention to
the impact my work produces. These days I would much rather compile a number of
small simple changes to &ldquo;wow&rdquo; the users, as opposed to building unnecessarily
complex nice-to-haves. This sounds simple and straight-forward, and some reader
might even say &ldquo;That&rsquo;s silly, everybody knows that&rdquo;. However significant number
of engineers I meet don&rsquo;t concentrate on how much impact they produce.</p>

<p>It&rsquo;s easy to get caught up in a daily routine: you close an issue after issue,
there&rsquo;s a stable flow of requirements from the business meetings. It&rsquo;s not
always easy to know when to stop and think &ldquo;Do I really need to do this?&rdquo;.</p>

<h2>Get the priorities right</h2>

<p>Divide amount of impact task produces by amount of effort you&rsquo;ll have to put
into completing it. Arrange the tasks by this factor.</p>

<p>More often then not you can drop items with low impact/effort ratio.</p>

<h2>Separate what is needed from what is asked</h2>

<p>Know who the stakeholders are for each task, feature, or a project you work
on.  Understand their underlying motives. Anyone can fall a victim of an
<a href="http://meta.stackexchange.com/q/66377/184108">XY problem</a>, it is your responsibility as an engineer to make sure that
stakeholders ask for what they actually need.</p>

<h2>Know when to say &ldquo;No&rdquo;</h2>

<p>In the very beginning of my career I gladly took every single task thrown at me.
It soon became an issue: work that actually needs to get done is not getting
done quickly enough. Knowing when to say &ldquo;No&rdquo; is an art that takes practice.</p>

<h2>Think about your work</h2>

<p>Beware of routines, repeating the same workflow time after time is damaging when
it comes to building software. Stop each time before you proceed to the next
step, and ask yourself if you&rsquo;re performing the task in the best way possible.
Be mindful about your work.</p>

<h2>Be a catalyst for change</h2>

<p>Be the first to promote the change. Did you notice a poor practice on a
project? Begin a more efficient practice (if it&rsquo;s appropriate based on your
role in a team of course). Don&rsquo;t go on telling people how wrong what they use
is. Show everyone how the new way is better on practice, and your colleagues
will adopt successful trend.</p>

<p>Don&rsquo;t fall a victim of deferring responsibility: be aware that when multiple
people are involved, every member of a group relies on other people to get
things done. Be the one to take on responsibility when it&rsquo;s unclear who should.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing cd bookmarks with apparix]]></title>
    <link href="http://www.rosipov.com/blog/managing-cd-bookmarks-with-apparix/"/>
    <updated>2015-02-20T19:25:45-05:00</updated>
    <id>http://www.rosipov.com/blog/managing-cd-bookmarks-with-apparix</id>
    <content type="html"><![CDATA[<p>A couple of months ago I discovered apparix: a set of commands which augment
<code>cd</code> with bookmarks. It really is an amazing feeling when you zap between
multiple directories far away just with a couple of keystrokes! Apparix
provides three commands I use daily: <code>to</code>, <code>bm</code>, and <code>apparix</code> (program
suggests aliasing last one to <code>als</code>). Here&rsquo;s how I use it:</p>

<pre><code>$ pwd
/Users/ruslan
$ apparix
--- portals
--- expansions
--- bookmarks
j dotfiles     /Users/ruslan/.dotfiles
j blog         /Users/ruslan/Projects/ruslanosipov.github.io
$ to blog
$ pwd
/Users/ruslan/Projects/ruslanosipov.github.io
$ cd source/_posts
$ bm posts
added: posts -&gt; /Users/ruslan/Projects/ruslanosipov.github.io/source/_posts
$ to dotfiles
$ pwd
/Users/ruslan/.dotfiles
$ to posts
$ pwd
/Users/ruslan/Projects/ruslanosipov.github.io/source/_posts
</code></pre>

<p>The example above is self explanatory: you can see how over the span of a year
apparix saves hours of navigating directories you frequent.</p>

<h2>Installation</h2>

<p>If you don&rsquo;t like reading manuals, installation might be a confusing. But in
reality it&rsquo;s straightforward, you just need to add some functions or aliases to
your shell&rsquo;s configuration file.</p>

<p>Install <code>apparix</code> using your favorite package manager, and then pipe examples
apparix offers into your shell&rsquo;s <code>rc</code> file.</p>

<pre><code>apparix --shell-examples &gt;&gt; ~/.bashrc
</code></pre>

<p>Open your <code>.bashrc</code> (or another corresponding configuration file), and pick the
preferred way of using apparix: you&rsquo;ll see functions for bash and aliases for
csh given as examples. Pick whatever works for your shell, source your <code>rc</code>
file, and you&rsquo;re all set!</p>

<p>Happy jumping!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ranger - the CLI file manager]]></title>
    <link href="http://www.rosipov.com/blog/ranger-the-cli-file-manager/"/>
    <updated>2015-02-08T22:33:16-05:00</updated>
    <id>http://www.rosipov.com/blog/ranger-the-cli-file-manager</id>
    <content type="html"><![CDATA[<p>Ranger is a lightweight but powerful file manager with Vi-like key bindings.
It shines at exploring file trees, looking for specific files, and performing
bulk operations on folders and files. Three column layout will be very similar
to Mac OS X users: center column shows contents of the current directory, left
column lists contents of a parent directory, and the right column contains
preview for the selected file or folder.</p>

<p><img src="http://www.rosipov.com/images/posts/ranger-file-preview.png" title="File preview screen in Ranger: parent directory in the left column, current directory in the center column, and selected file preview in the left column." ></p>

<p>Ranger supports movement with familiar to Vi users <code>h</code>, <code>j</code>, <code>k</code>, and <code>l</code> keys,
has internal command line which is invoked with <code>:</code>, as well as many other
features and key bindings similar to Vi. Another great selling point - Ranger
can be extended with custom commands and key bindings. Utility is written in
Python, therefore all the commands are nothing more than Python scripts.</p>

<p><img src="http://www.rosipov.com/images/posts/ranger-marking-files.png" title="Marking files for deletion in Ranger.  Files highlighted in yellow will be deleted by executing `:delete` command." ></p>

<h2>Installation</h2>

<p>Ranger is easy to install and can be found in most public repositories, just
install <code>ranger</code> package using your favorite package manager. While you&rsquo;re at
it, you may want to install some external utilities to help Ranger properly
display file previews (list is taken from <a href="https://wiki.archlinux.org/index.php/ranger">ArchWiki page on Ranger</a>):</p>

<ul>
<li><code>atool</code> for archives.</li>
<li><code>highlight</code> for syntax highlighting.</li>
<li><code>libcaca</code> (<code>img2txt</code>) for image previews in ASCII.</li>
<li><code>lynx</code>, <code>w3m</code> or <code>elinks</code> for HTML.</li>
<li><code>mediainfo</code> or <code>perl-image-exiftool</code> for media file information.</li>
<li><code>poppler</code> (<code>pdftotext</code>) for PDF.</li>
<li><code>transmission-cli</code> for BitTorrent information.</li>
<li><code>w3m</code> for image previews.</li>
</ul>


<p>After all the dependencies are installed, quickly start up <code>ranger</code>, exit it
with <code>q</code>, and run <code>ranger --copy-config=all</code> to generate configuration files in
<code>~/.config/ranger</code>.</p>

<h2>Usage</h2>

<p>Here are a few of the key bindings and commands I found useful:</p>

<ul>
<li>Use spacebar to select files one by one. By selecting multiple files, you can
perform bulk operations on them. Use <code>V</code> to perform visual selection.
Lowercase <code>v</code> reverses current selection. For instance, you can run <code>:delete</code>
after selecting multiple files and folders.</li>
<li>As mentioned above, execute <code>:delete</code> to remove currently selected file (or
files).</li>
<li>To fullscreen a preview window, hit <code>i</code>. Hit <code>i</code> again to return the preview
window to it&rsquo;s normal size.</li>
<li>Vi&rsquo;s <code>gg</code> and <code>G</code> allow you to jump to the top and bottom of the file list
respectively.</li>
<li>Hit <code>zh</code> to toggle hidden files display.</li>
<li>As in Vim, <code>/</code> searches for a file in a current buffer, while <code>n</code> and <code>N</code> let
you navigate to the next and previous matches respectively.</li>
<li>Similarly, <code>:filter</code> allows you to only limit your view to the files matching
a pattern. It&rsquo;s also interactive - changes are applied as you type.</li>
</ul>


<p>If you&rsquo;re an avid Vim user, you&rsquo;ll find using Ranger surprisingly intuitive.
Otherwise you might get confused and scared away, probably for a good reason.
Ranger is designed to provide Vi-like feel for file browsing, and it does that
job well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power of the command line]]></title>
    <link href="http://www.rosipov.com/blog/power-of-the-command-line/"/>
    <updated>2015-02-06T16:13:49-05:00</updated>
    <id>http://www.rosipov.com/blog/power-of-the-command-line</id>
    <content type="html"><![CDATA[<p><em>Disclaimer: I am not advocating any specific tools or methodologies, but
sharing a workflow I find to be efficient and pleasant.</em></p>

<p>I am a huge fan of working with CLI applications. I use Vim for editing code,
composing emails, and various kinds of writing. When I have to manipulate huge
amounts of email, I use Mutt: it&rsquo;s intuitive tagging and regular expression
engine are extremely useful for the task. I employ <code>ack</code>, <code>awk</code>, <code>grep</code>, and
<code>sed</code> - Linux utilities which allow for precise and fast text manipulation.</p>

<p>However, I would not use CLI browsers like <code>elinks</code> or <code>w3m</code>, and the idea of
reading every email in Mutt gives me the creeps. I love the visualization web
browser offers, something text-based prompt is not able to provide. And it
doesn&rsquo;t have to.</p>

<p>There are two components to most of the tasks performed on a computer: analyzing
output and entering input. Certain tasks employ one component more than the
other. In most modern applications it&rsquo;s rare to have both solid control from
the user perspective and a pleasant informative UI. With increased visual
component, it&rsquo;s more time consuming to make the application do what you need,
especially if your needs are esoteric. With more editing power, visual display
becomes less complex in order to make editing tasks easier.</p>

<h2>Where visual tools fall short</h2>

<p>What is the alternative? Using multiple programs with different levels of
control to accomplish one task: to edit text. Each of the programs excels in
it&rsquo;s own field: word processing software allows for beautiful fonts and document
presentation, IDE lets you access aggregated meta information about your
application. But most of the IDEs and word processors lack the powerful tools
needed to manipulate the foundation of what user is working with - plain text.</p>

<h2>Ode to plain text</h2>

<p>I spend a lot of time writing and editing plain text. Be it source code, emails,
documentation, or even blog posts. These tasks take up significant amount of my
day, and it is only logical to substitute some of the visual presentation
capabilities for effectiveness.</p>

<p>It is hard to mentally process data which is not explicitly and unambiguously
visible: different levels of headings, hidden meta information. Unlike more
obscuring formats, plain text is all there is - it has nothing to hide. If you
don&rsquo;t see it - it&rsquo;s not there. If you do see it - you know exactly what it is.</p>

<p>One of my favorite tips from &ldquo;<a href="http://amzn.to/1yRe6Th">Pragmatic Programmer</a>&rdquo; goes:</p>

<blockquote><p>Use a single editor well</p></blockquote>

<p>So I learned one editor well, and now I use it for all my writing and editing
needs. I don&rsquo;t have to jump between IDE, browser, and office software. Most of
the text I edit is manipulated with one editor. There is only one set of key
bindings to know, one skill to master and hone. Fast, without any additional
thought, using single text editor and all of it&rsquo;s powerful features is imprinted
in muscle memory. One less task to worry about.</p>

<p>I write my documents in Markdown format, and later convert them to the desired
output using <code>pandoc</code>: be it an HTML page, PDF, or a Microsoft Word document. I
use Vim, so I can rearrange paragraphs or manipulate lines within a couple of
keystrokes. Since I spend so much time editing text, I also touch type, which
makes me even more effective at the given task.</p>

<h2>Harness the power of the command line</h2>

<p>When it comes to bulk manipulating files or working with version control -
there is no better candidate then command line applications. There&rsquo;s no need to
go through a number of obscure menus, ticking and unticking checkboxes, and
hoping that your desired result can be achieved with a program&rsquo;s GUI.</p>

<p>Let&rsquo;s look at a few scenarios some users face in their daily workflow.</p>

<h3>Creating a backup</h3>

<p>With GUI, you&rsquo;d have to take multiple steps:</p>

<ol>
<li>Right click <code>file</code>.</li>
<li>Left click on &ldquo;Copy&rdquo;.</li>
<li>Right click on some empty space.</li>
<li>Left click on &ldquo;Paste&rdquo;.</li>
<li>Right click on a newly created copy.</li>
<li>Left click on &ldquo;Rename&rdquo;.</li>
<li>Switch to a keyboard.</li>
<li>Type <code>file.bak</code>.</li>
</ol>


<p>The above steps can be sped up using shortcuts like <code>C-c</code> or <code>C-v</code>, but not by
much. Here&rsquo;s an alternative in bash:</p>

<pre><code>cp file{,.bak}
</code></pre>

<p>While first variant would do great for a novice or a casual user - the second
method would be much more preferred by an experienced user whose concern is
speed.</p>

<h3>Recursively bulk replacing text in a directory</h3>

<p>Let&rsquo;s assume we want to do a bulk replace text in a directory and all it&rsquo;s
subdirectories. We have our trusted IDE, let&rsquo;s assume this IDE is already
configured to work with a desired directory.</p>

<ol>
<li>Open your IDE.</li>
<li>Select &ldquo;Edit&rdquo; menu.</li>
<li>Select &ldquo;Find and Replace&rdquo; submenu.</li>
<li>Click on a &ldquo;Find&rdquo; input field.</li>
<li>Switch to a keyboard.</li>
<li>Type <code>function_to_replace</code>.</li>
<li>Switch to a mouse.</li>
<li>Click on &ldquo;Replace&rdquo; input field.</li>
<li>Switch to a keyboard.</li>
<li>Type <code>new_function_name</code>.</li>
<li>Switch to a mouse.</li>
<li>Enable &ldquo;Search in subdirectories&rdquo; checkbox.</li>
<li>Click &ldquo;OK&rdquo;.</li>
</ol>


<p>Again, this can be shortened a bit with some keyboard shortcuts, but not by
much. You still have to switch between keyboard and a mouse a total of 4 times,
and you still have to click through all the menus. This does get time consuming
if you do this often. Now let&rsquo;s try to perform the same task in command line:</p>

<pre><code>find . -type f | xargs sed -i 's/function_to_replace/new_function_name/g'
</code></pre>

<p>Much faster, if you&rsquo;re able to memorize the structure. And remembering what the
commands do is much easier than it looks. Especially with the help of <code>man</code> or,
even better, <code>bro</code> (see <a href="http://bropages.org">http://bropages.org</a> for latter).</p>

<p>The above example demonstrates one of the biggest advantages of command line
interfaces: an ability to redirect an output of one program into another,
chaining the tools together. In this example, we first get a list of all files
use <code>find</code> tool, and then run <code>sed</code> tool on each of those files in order to
replace the text.</p>

<p>An output from any CLI tool can be fed into any other CLI tool. This allows for
countless possibilities and high adaptability to unscripted scenarios.</p>

<h2>Is it worth learning CLI tools over their GUI counterparts?</h2>

<p>This depends on what your intentions are. If you&rsquo;re a power user who writes and
edits a lot of text or manipulates bulk amounts of text on a daily basis - than
it&rsquo;s definitely worth it. Time spent learning these tools will pay off. But if
you&rsquo;re a casual user whose needs end with writing an occasional email or two -
then you probably don&rsquo;t need to worry about this.</p>

<p>Hell, if you&rsquo;ve read this far - this means you&rsquo;re the former case. I can
practically guarantee that you will benefit from employing command line tools
and modal editors over their GUI counterparts.</p>

<p>I&rsquo;ve put together a table for comparison between two. Indeed, there are
different times when either GUI or CLI tools excel:</p>

<table>
<thead>
<tr>
<th> Factor                            </th>
<th> CLI </th>
<th> GUI </th>
</tr>
</thead>
<tbody>
<tr>
<td> Ability to combine/chain tools    </td>
<td> Yes </td>
<td> No  </td>
</tr>
<tr>
<td> Easy to learn                     </td>
<td> No  </td>
<td> Yes </td>
</tr>
<tr>
<td> Efficient for a novice user       </td>
<td> No  </td>
<td> Yes </td>
</tr>
<tr>
<td> Efficient for an experienced user </td>
<td> Yes </td>
<td> No  </td>
</tr>
<tr>
<td> Good for occasional use           </td>
<td> No  </td>
<td> Yes </td>
</tr>
<tr>
<td> Good for repetitive tasks         </td>
<td> Yes </td>
<td> No  </td>
</tr>
<tr>
<td> Presents visual information well  </td>
<td> No  </td>
<td> Yes </td>
</tr>
</tbody>
</table>


<p>As you can see - both CLI and GUI programs have their pluses and minuses. CLI
tools seem to appeal to experienced users, while GUI tools are great for novice
users and do excel in representing visual information. No matter what kind of
interface you prefer, it&rsquo;s crucially important to use the right tool for the job.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom templates in vimwiki]]></title>
    <link href="http://www.rosipov.com/blog/custom-templates-in-vimwiki/"/>
    <updated>2015-02-05T13:40:33-05:00</updated>
    <id>http://www.rosipov.com/blog/custom-templates-in-vimwiki</id>
    <content type="html"><![CDATA[<p>I got myself into a habit of using vimwiki for the past year: it helps me to
keep track of random bits of information, work and project notes, as well as
daily goals and achievements. You can read more about vimwiki in an article I
wrote a while back: &ldquo;<a href="http://www.rosipov.com/blog/personal-wiki-with-vimwiki/">Personal wiki with vimwiki</a>&rdquo;.</p>

<p><img src="http://www.rosipov.com/images/posts/vimwiki-workflow-habits.png" title="HTML page generated by vimwiki with a custom navigation bar." ></p>

<p>One of vimwiki&rsquo;s features I really like is an ability to convert whole wiki to
HTML with a single command: <code>:VimwikiAll2HTML</code>. There is one annoyance though:
HTML vimwiki pages don&rsquo;t have any navigation elements: the only way to navigate
between pages is by clicking through links within a page or using browser&rsquo;s
&ldquo;back&rdquo; button.</p>

<p>Luckily, vimwiki has a setting which allows using custom templates for
generating HTML. Assuming your wiki is in <code>$HOME/Dropbox/wiki</code> (can be anywhere
else though), make following changes to your <code>.vimrc</code>:</p>

<pre><code>let g:vimwiki_list = [{
  \ 'path': '$HOME/Dropbox/wiki',
  \ 'template_path': '$HOME/Dropbox/wiki/templates',
  \ 'template_default': 'default',
  \ 'template_ext': '.html'}]
</code></pre>

<p>After that, create a <code>$HOME/Dropbox/wiki/templates/default.html</code> using
<code>vimwiki/autoload/vimwiki/default.tpl</code> as a base. I added simple navigation bar
to my default template:</p>

<pre><code>&lt;html&gt;
&lt;head&gt;
    &lt;link rel="Stylesheet" type="text/css" href="%root_path%style.css" /&gt;
    &lt;title&gt;%title%&lt;/title&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;a href="%root_path%index.html"&gt;Index&lt;/a&gt; |
    &lt;a href="%root_path%diary/diary.html"&gt;Diary&lt;/a&gt;
    &lt;hr&gt;
    &lt;div class="content"&gt;
    %content%
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Now it&rsquo;s much easier to jump between wiki entries. Of course, customization
doesn&rsquo;t end there: you can change styles, add JavaScript and make your wiki all
fancy and advanced.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Contributing to an existing Octopress blog]]></title>
    <link href="http://www.rosipov.com/blog/contributing-to-an-existing-octopress-blog/"/>
    <updated>2014-12-17T00:09:58-05:00</updated>
    <id>http://www.rosipov.com/blog/contributing-to-an-existing-octopress-blog</id>
    <content type="html"><![CDATA[<p>I had to download my Octopress blog to a new machine today and the process of
setting up didn&rsquo;t go as smoothly as I expected. At the end of the day the setup
turned out to be simple, and here are the steps:</p>

<pre><code>git clone -b source https://github.com/username/username.github.io myblog
cd myblog
git clone https://github.com/username/username.github.io _deploy
bundle install
</code></pre>

<p>In a nutshell, you have to manually add <code>_deploy</code> folder set to track <code>master</code>
branch of your Octopress repository. Otherwise <code>rake deploy</code> command fails.</p>

<p>Happy writing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[750 words a day]]></title>
    <link href="http://www.rosipov.com/blog/750-words-a-day/"/>
    <updated>2014-10-29T13:51:35-04:00</updated>
    <id>http://www.rosipov.com/blog/750-words-a-day</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve had increased interest in writing throughout this year. In addition to
being a pleasant and fulfilling activity, it shown a number of benefits in my
everyday life and career:</p>

<ul>
<li>Composing emails became faster and easier. When you have to reply to a couple
of dozen emails a day, speed and attention to details matters. Writing more
taught me to write more concise emails which are easy to read.</li>
<li>Writing a lot isn&rsquo;t a problem anymore. If I have to write documentation,
comment code, or just put together a very long email - I&rsquo;m not put off by the
idea. I&rsquo;m excited about it.</li>
<li>Typing speed went up. <a href="http://www.rosipov.com/blog/why-should-you-learn-to-touch-type/">I already touch type</a>, and constant writing practice
increases the acquired speed. Fast typing makes life easier, speeding up
mundane tasks, freeing up brain power for more costly activities.</li>
<li>It&rsquo;s easy to keep a condensed work log to highlight the issues of the day.
Tough programming issues, &ldquo;Eureka!&rdquo; moments, meeting notes - this historical
data saved me hours or even days of repeating my mistakes.</li>
</ul>


<p>A while ago, I&rsquo;ve heard of a thing called <a href="http://750words.com/">&ldquo;750 words&rdquo;</a>, a site built around
a challenge to write 750 words a day in order to improve writing skills and
unleash creativity. This looked like a great idea, and I decided to give it a
shot. I prefer to keep my personal entries offline, and I decided not to use the
provided service, but to keep a set of plain text files on my local machine.
Which worked out just fine. It&rsquo;s all just text after all.</p>

<p>I lasted for 10 days in a row, which I am proud of (filling up approximately 3
pages a day was no easy task for me). I started of with silly entries about not
knowing what to write about, and finished with a piece of a fiction story.
That&rsquo;s a considerable improvement.</p>

<p>By the end of the challenge I was mentally exhausted. But it taught me a very
important lesson: the more you write, the better you become. And that&rsquo;s one of
the main reasons I keep crafting new entries for this blog.</p>

<p>This happened half a year ago, I just never got around to writing about it. I
will go ahead and start another 750 words spree today. Maybe this time I&rsquo;ll be
able to make it last for the whole month.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beyond grep]]></title>
    <link href="http://www.rosipov.com/blog/beyond-grep/"/>
    <updated>2014-09-21T15:18:31-04:00</updated>
    <id>http://www.rosipov.com/blog/beyond-grep</id>
    <content type="html"><![CDATA[<p>I search for things a lot, especially in my code. Or even worse - someone else&rsquo;s
code. For years <code>grep</code> served as an amazing tool for this: fast, simple, and
yet powerful. That was until I discovered <code>ack</code> for myself. An incredibly easy
to use <code>grep</code> implementation built to work with large (or not really) code
trees.</p>

<p>A lot can be said to enforce superiority of <code>ack</code> over <code>grep</code> when it comes to
working with code, and it&rsquo;s all said here: <a href="http://beyondgrep.com/why-ack/">ack&rsquo;s features</a>.</p>

<p>Amazing thing is - <code>ack</code> doesn&rsquo;t even need a tutorial. Learning progression is
natural and &ldquo;just happens&rdquo; by researching necessary use cases as the need
arises (<code>ack</code> has a great manual entry).</p>

<p>Here&rsquo;s a typical use example for <code>ack</code>:</p>

<pre><code>ack --shell 'gr[ae]y'
</code></pre>

<p>Searches all shell script files in the current code tree for any occurrences of
&ldquo;gray&rdquo; or &ldquo;grey&rdquo;. It will search <code>.sh</code>, <code>.zsh</code>, and just about dot-anything;
<code>ack</code> will even check shebang lines for you.</p>

<p>Ease of use, the fact that it&rsquo;s ready to use out of the box, extensive file
types, native support for Perl&rsquo;s regular expressions: <code>ack</code> does really good
job at searching through code.</p>

<p>Download it from <a href="http://beyondgrep.com">Beyond grep</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Effective search with Mutt]]></title>
    <link href="http://www.rosipov.com/blog/effective-search-with-mutt/"/>
    <updated>2014-08-02T16:32:51-04:00</updated>
    <id>http://www.rosipov.com/blog/effective-search-with-mutt</id>
    <content type="html"><![CDATA[<p>I generally don&rsquo;t use Mutt for everyday emails - I find smooth non-monospace
fonts to be more pleasant to the eye, and the visualization my browser offers
is hard to beat. The main use-case for me is composing long emails: Mutt lets
me use my favorite text editor, which speeds up the editing of long and
carefully composed responses.</p>

<p>Recently I added a new use-case to my work flow: searching through emails.
Mutt has a powerful built-in regular-expressions engine, which is something the
web Gmail client is missing.</p>

<p>Mutt has two ways of finding things: search and limit. &ldquo;Search&rdquo; just jumps from
one matching letter to another, something along the lines what <code>/</code> command does
in <code>less</code>, <code>more</code>, or <code>vim</code>. &ldquo;Limit&rdquo; is something I am more used to with the
web client, and it&rsquo;s what I use the most.</p>

<h2>Using limits</h2>

<p>Limit works the way regular search works in Gmail: it limits the view to
conversations matching the query. Hit <code>l</code>, and enter a search query.</p>

<p>By default, Mutt will only search through the subject lines, but this behaviour
can be changed by prefixing the command with a special identifier. For
instance, searching for <code>~b oranges</code> will limit the view to all the messages
which mention &ldquo;oranges&rdquo; in the message body. Here are a couple I use the most:</p>

<ul>
<li><code>~b</code> &ndash; Search in the message body.</li>
<li><code>~B</code> &ndash; Search in the whole message.</li>
<li><code>~f</code> &ndash; Message originated from the user.</li>
<li><code>~Q</code> &ndash; Messages which have been replied to.</li>
</ul>


<p>You can find full list in the <a href="http://www.mutt.org/doc/manual/manual-4.html#ss4.2">Mutt Advanced Usage Manual</a>.</p>

<p>Patterns can be chained to produce narrower results: <code>~f joe ~B apples</code>. This
will search for a message mentioning &ldquo;apples&rdquo; coming from an author whose name
contains &ldquo;joe&rdquo;.</p>

<h3>Caching mail for faster search</h3>

<p>You may find that searching whole messages is slow, especially if you have more
than a couple hundred messages to search through. That&rsquo;s because by default
Mutt does not store messages for local use. This can be changed by specifying
<code>header_cache</code> and <code>message_cachedir</code> variables in your <code>.muttrc</code> file:</p>

<pre><code>set header_cache     = "$HOME/Mail"
set message_cachedir = "$HOME/Mail"
</code></pre>

<p>Now, after you perform your first search, it will cache every message you open,
making all the consecutive searches lightning fast.</p>

<p>Oh, and keep in mind, Mutt stores messages and headers in plain text, so make
sure the cache directory is not shared with anyone but yourself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One more argument for 80 character limit]]></title>
    <link href="http://www.rosipov.com/blog/one-more-argument-for-80-character-limit/"/>
    <updated>2014-07-30T02:00:04-04:00</updated>
    <id>http://www.rosipov.com/blog/one-more-argument-for-80-character-limit</id>
    <content type="html"><![CDATA[<p>Limiting code to 80 (or 100 or 120) characters per line. It&rsquo;s a well-known
topic, and there&rsquo;s an overall consensus on the subject, not counting occasional
questions by newbies and odd cases. Most established tech companies have their
own line length guidelines. These are often dependent on a language, such as in
the case of Google with their 80 character Python and 100 character Java limits.</p>

<p>In this article, I won&rsquo;t be advocating all the usual arguments, such as easier
diff with version control software, or the ability to stack windows side by side
on wide screens. No, I believe that battle to be won quite a long time ago, the
topic is now closed. But something I didn&rsquo;t find mentioned in any of the
discussions is an interesting point from the world of writers and designers.</p>

<p>Ever since I started being interested in improving my writing skills, I found
article after article mention the importance of line length in reading.
Interestingly enough, this issue was raised in a world of literature. It had
been resolved long before programmers were fascinated with the desire to use up
rapidly expanding screen real estate.</p>

<p>I am talking about something known as &ldquo;measure&rdquo; in typography. It seems to be
the reason newspapers use narrow columns, or books leave such vast margins
around the text on a page. Here&rsquo;s an exempt from the <a href="http://en.wikipedia.org/wiki/Measure_(typography)">Wikipedia article</a>:</p>

<blockquote><p>Measure (or sometimes &ldquo;The Measure&rdquo;) in typography is the length of a line of
text. For a single-column design measure should ideally lie between 40 &amp; 80
characters. Many typographers consider the perfect measure to be 65
characters. If the lines are too short then the text becomes disjointed, if
they are too long the content loses rhythm as the reader searches for the
start of each line. Punctuation should preferably hang outside the measure.</p></blockquote>

<p>Most programming languages use special operators and keywords, which can be
considered &ldquo;punctuation&rdquo;. Some languages are more verbose (use more
punctuation), and some aren&rsquo;t. If you remove punctuation, the 80/100/120
character limit perfectly fits the standard time-honed &ldquo;measure&rdquo;.</p>

<p>Maybe I can use this as an additional argument the next time I have to explain
to a junior new hire why the character limits are so strictly enforced.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Three favorite bash tricks]]></title>
    <link href="http://www.rosipov.com/blog/three-favorite-bash-tricks/"/>
    <updated>2014-07-24T21:41:10-04:00</updated>
    <id>http://www.rosipov.com/blog/three-favorite-bash-tricks</id>
    <content type="html"><![CDATA[<p>I spend most of my development time in the shell - be it editing text with Vim
or executing various console commands. I have quite a number of tricks in my
daily repertoire, and I would like to share three tips today.</p>

<h2>Edit current command with a text editor</h2>

<p>I often end up having to change a long command I just typed, and using arrow
keys to get to the correct spot is not favorable. Bash has the feature which
lets you edit current command in a text editor of your choice. Hit <code>Ctrl + x</code>,
<code>Ctrl + e</code> (or <code>Ctrl + x + e</code>), and you will be dropped into your text editor.
Now you are able to edit the command, and it will be executed as soon as your
write the file and exit the editor.</p>

<p>You can use an editor of your choice by adding following line to your <code>.bashrc</code>
file:</p>

<pre><code>export EDITOR=vim
</code></pre>

<p>Replace <code>vim</code> with the name of your favorite editor.</p>

<p>Update: It looks like for some machines setting <code>EDITOR</code> variable is not
enough. In this case, you also need to set <code>VISUAL</code> environment variable.</p>

<h2>Edit recent command</h2>

<p>You can edit your recent commands in a text editor of your choice by executing
<code>fc beginning_of_the_command</code>. For instance, if you run <code>fc l</code>, you will open
most recent command starting with the letter &ldquo;l&rdquo;.</p>

<p>You can execute <code>fc</code> without any arguments to edit last executed command.</p>

<h2>Bash history autocomplete</h2>

<p>Another great feature - &ldquo;reverse intelligent search&rdquo;. If you hit <code>Ctrl + r</code> in
your shell, you&rsquo;ll be greeted by the following prompt:</p>

<pre><code>(reverse-i-search)`':
</code></pre>

<p>Start typing a part of the command from your history, and you&rsquo;ll see suggestions
popping up. Hit <code>Enter</code> to pick the command (you&rsquo;ll be able to edit it before
executing), or push <code>Ctrl + g</code> to return back.</p>

<p>Like any of these tips? Have some of your own? Don&rsquo;t hesitate to share those in
the comments section down below.</p>
]]></content>
  </entry>
  
</feed>
