<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | Ruslan Osipov]]></title>
  <link href="http://www.rosipov.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://www.rosipov.com/"/>
  <updated>2023-07-17T22:06:03-07:00</updated>
  <id>http://www.rosipov.com/</id>
  <author>
    <name><![CDATA[Ruslan Osipov]]></name>
    <email><![CDATA[ruslan@rosipov.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vimwiki with Google Drive on ChromeOS]]></title>
    <link href="http://www.rosipov.com/blog/vimwiki-with-google-drive-on-chromeos/"/>
    <updated>2023-07-17T08:00:00-07:00</updated>
    <id>http://www.rosipov.com/blog/vimwiki-with-google-drive-on-chromeos</id>
    <content type="html"><![CDATA[<p>In the past few years my work heavily shifted towards being mostly done in a web browser. Much of what I use today is email and documents, and I&rsquo;m able to SSH into a dedicated Linux machine for rare instances of coding or running some scripts. Because of that my primary machine these days is a trusty Chromebook - really just a web browser with an OS stapled on top of it.</p>

<p>I&rsquo;ve <a href="https://www.rosipov.com/blog/personal-wiki-with-vimwiki/">used Vimwiki</a> extensively for nearly 10 years now: it&rsquo;s a fantastic way to organize my thoughts and everything I learn about the world, and it works with the tool I know and love - Vim. My Vimwiki followed me across machines, and I use Google Drive to keep it in sync regardless of the environment I use the Vimwiki in.</p>

<p>It took me way longer than I would like to admit to get Vimwiki working on my Chromebook: here lies the journey of getting the Vimwiki to work on a ChromeOS. There are three major hurdles I had to jump over:</p>

<ul>
<li>Getting Vim to run on ChromeOS.</li>
<li>Getting Vimwiki, Google Drive, and ChromeOS to play together nicely.</li>
<li>Getting the web view to work.</li>
</ul>


<p>Good news is that ChromeOS allows you to run a Linux environment. Bad news, is that things can&rsquo;t get a tiny bit finnicky.</p>

<p>First, set up Linux to run on ChromeOS via &ldquo;Settings > Advanced > Developers > Linux Development Environment > Turn on&rdquo;. After a few prompts and a freshly brewed cup of coffee, you&rsquo;ll have a Debian Linux environment running on your Chromebook.</p>

<p>Newly installed Linux is accessible from the terminal:</p>

<p><img src="/images/posts/chromeos-linux-terminal.png" title="Screenshot of a Linux terminal available from ChromeOS." ></p>

<p>Pop open the terminal and update Vim and get the latest version of Python:</p>

<pre><code>sudo apt install python3 vim
</code></pre>

<p>Download and install Vimwiki however you&rsquo;d like: there are extensive instructions on <a href="https://github.com/vimwiki/vimwiki">GitHub</a>. If you&rsquo;re anything like me, you might have a <a href="https://www.rosipov.com/blog/cross-platform-vim-plug-setup/">self-installing vim-plug</a>, and all you need is just plop your existing .vimrc into your Chromebook Linux instance.</p>

<p>Now, for getting Google Drive, Vim, and ChromeOS to play together. ChromeOS and Linux are integrated well enough, and you can access your home directory through ChromeOS native file manager:</p>

<p><img src="/images/posts/chromeos-linux-files.png" title="Screenshot of Linux home directory available in ChromeOS file manager." ></p>

<p>To share files in another direction, there&rsquo;s a handy &ldquo;Share with Linux&rdquo; option for files:</p>

<p><img src="/images/posts/chromeos-share-with-linux.png" title="Screenshot of &ldquo;Share with Linux&rdquo; option in ChromeOS file manager." ></p>

<p>This option shares files with Linux via <code>/mnt/chromeos</code>. In Google Drive, I have a <code>vimwiki/</code> folder which contains <code>wiki/</code> and <code>wiki_html/</code>. I&rsquo;m able to share that folder, and update Vimwiki configuration accordingly:</p>

<pre><code>let g:vimwiki_list = [{
  \ 'path': '/mnt/chromeos/GoogleDrive/MyDrive/vimwiki/wiki/',
  \ 'template_path': '/mnt/chromeos/GoogleDrive/MyDrive/vimwiki/wiki/templates',
  \ 'template_default': 'default',
  \ 'template_ext': '.html'}]
</code></pre>

<p>Now there&rsquo;s a corner case I ran into when I had Vimwiki set up on a different account than the one I use to log into the Chromebook. Only the primary account&rsquo;s Google Drive shows up in ChromeOS file manager. To work around that, I had to share my <code>vimwiki/</code> folder with the primary account, and then share that with Linux. The resulting directory was available through a <code>/mnt/chormeos/GoogleDrive/ShortcutsSharedWithMe/...</code>:</p>

<p><img src="/images/posts/chromeos-linux-shared-folders.png" title="Screenshot of Linux folders shared with ChromeOS." ></p>

<p>At this point Vimwiki works just fine: working with the wiki and generating HTML is functional. All that&rsquo;s left is getting the generated Vimwiki to show up in the web browser. Ever since Chrome disabled local file access, I (expectedly) haven&rsquo;t been able to get <code>:Vimwiki2HTMLBrowse</code> to function, since simple <code>file:///</code> URLs aren&rsquo;t accessible for security reasons.</p>

<p>That&rsquo;s where Python comes in, with it&rsquo;s native web server module. I made a small alias in my <code>.bashrc</code>:</p>

<pre><code>alias vimwiki="cd /mnt/chromeos/GoogleDrive/MyDrive/vimwiki/ &amp;&amp; python3 -m http.server"
</code></pre>

<p>Next thing you know, I&rsquo;m finally able to access the generated web version of my Vimwiki via <code>localhost:8000/wiki_html</code>:</p>

<p><img src="/images/posts/vimwiki-web-view.png" title="Screenshot of an HTML version of Vimwiki." ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I use Vimwiki]]></title>
    <link href="http://www.rosipov.com/blog/how-i-use-vimwiki/"/>
    <updated>2019-06-23T17:00:00-08:00</updated>
    <id>http://www.rosipov.com/blog/how-i-use-vimwiki</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been <a href="https://www.rosipov.com/blog/personal-wiki-with-vimwiki/">using Vimwiki for 5 years</a>, on and off. There&rsquo;s a multi year gap in between, some entries are back to back for months on end, while some notes are quarters apart.</p>

<p>Over those 5 years I&rsquo;ve tried a few different lightweight personal wiki solutions, but kept coming back to Vimwiki due to my excessive familiarity with Vim and the simplicity of the underlying format (plain text FTW).</p>

<p>I used to store my Vimwiki in Dropbox, but after Dropbox imposed a three device free tier limit, I <a href="https://www.rosipov.com/blog/google-drive-on-linux-with-rclone/">migrated to Google Drive</a> for all my storage needs (and haven&rsquo;t looked back!). I&rsquo;m able to view my notes on any platform (including previewing the HTML pages on mobile).</p>

<p>I love seeing how other people organize their Wiki homepage, so it&rsquo;s only fair to share mine:</p>

<p><img src="/images/posts/vimwiki-homepage-screenshot.png" title="Screenshot of my wiki homepage." ></p>

<p>I use Vimwiki as a combination of a knowledge repository and a daily project/work journal (<code>&lt;Leader&gt;wi</code>). I love being able to interlink pages, and I find it extremely helpful to write entries journal-style, without having to think of a particular topic or a page to place my notes in.</p>

<p>Whenever I have a specific topic in mind, I create a page for it, or contribute to an existing page. If I don&rsquo;t - I create a diary entry (<code>&lt;Leader&gt;w&lt;Leader&gt;w</code>), and move any developed topics into their own pages.</p>

<p>I use folders (I keep wanting to call them namespaces) for disconnected topics which I don&rsquo;t usually connect with the rest of the wiki: like video games, financial research, and so on. I&rsquo;m not sure I&rsquo;m getting enough value out of namespaces though, and I might revisit using those in the future: too many files in a single directory is not a problem since I don&rsquo;t interract with the files directly.</p>

<p>Most importantly, every once in a while I go back and revisit the organizational structure of the wiki: move pages into folders where needed (<code>:VimwikiRenameLink</code> makes this much less painful), add missing links for recently added but commonly mentioned topics (<code>:VimwikiSearch</code> helps here), and generally tidy up.</p>

<p>I use images liberally (<code>{{local:images/nyan.gif|Nyan.}}</code>), and I occasionally access the HTML version of the wiki (generated by running <code>:VimwikiAll2HTML</code>).</p>

<p>I&rsquo;ve found useful to keep a running todo list with a set of things I need to accomplish for work or my projects, and I move those into corresponding diary pages once the tasks are ticked off.</p>

<p>At the end of each week I try to have a mini-retrospective to validate if my week was productive, and if there&rsquo;s anything I can do to improve upon what I&rsquo;m doing.</p>

<p>I also really like creating in-depth documentation on topics when researching something: the act of writing down and organizing information it helps me understand it better (that&rsquo;s why, for instance, I have a beefy &ldquo;financial/&rdquo; folder, with a ton of research into somewhat dry, but important topics - portfolio rebalancing, health and auto insurance, home ownership, and so on).</p>

<p>Incoherent rambling aside, I&rsquo;m hoping this post will spark some ideas about how to set up and use your own personal wiki.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sane Vim defaults (from Neovim)]]></title>
    <link href="http://www.rosipov.com/blog/sane-vim-defaults-from-neovim/"/>
    <updated>2018-12-27T23:28:37+00:00</updated>
    <id>http://www.rosipov.com/blog/sane-vim-defaults-from-neovim</id>
    <content type="html"><![CDATA[<p>Vim comes with a set of often outdated and counter-intuitive defaults. Vim has been around for around 30 years, and it only makes sense that many defaults did not age well.</p>

<p>Neovim addresses this issue by being shipped with many default options tweaked for modern editing experience. If you can&rsquo;t or don&rsquo;t want to use Neovim - I highly recommend setting some these defaults in your <code>.vimrc</code>:</p>

<pre><code>if !has('nvim')
  set nocompatible
  syntax on

  set autoindent
  set autoread
  set backspace=indent,eol,start
  set belloff=all
  set complete-=i
  set display=lastline
  set formatoptions=tcqj
  set history=10000
  set incsearch
  set laststatus=2
  set ruler
  set sessionoptions-=options
  set showcmd
  set sidescroll=1
  set smarttab
  set ttimeoutlen=50
  set ttyfast
  set viminfo+=!
  set wildmenu
endif
</code></pre>

<p>The defaults above enable some of the nicer editor features, like <code>autoindent</code> (respecting existing indentation), <code>incsearch</code> (search as you type), or <code>wildmenu</code> (enhanced command-line completion). The defaults also smooth out some historical artifacts, like unintuitive backspace behavior. Keep in mind, this breaks compatibility with some older Vim versions (but it&rsquo;s unlikely to be a problem for most if not all users).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Status bar color in Vim terminal mode]]></title>
    <link href="http://www.rosipov.com/blog/status-bar-color-in-vim-terminal-mode/"/>
    <updated>2018-12-26T21:02:24+00:00</updated>
    <id>http://www.rosipov.com/blog/status-bar-color-in-vim-terminal-mode</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re using a custom color scheme (why wouldn&rsquo;t you?) in conjunction with a terminal mode in Vim (again, why wouldn&rsquo;t you?), you may have noticed that the terminal status bar has no respect for your color scheme.</p>

<p>Run <code>:term</code>, and you&rsquo;ll be greeted to the default status bar:</p>

<p><img src="/images/posts/vim-terminal-mode-default-colors.png" title="Screenshot of the default terminal mode status line." ></p>

<p>Since terminal mode is still in beta in Vim 8.1, we have to manually set the highlighting groups. It&rsquo;ll require a bit of digging.</p>

<p>Navigate to the directory containing your current color scheme. Depending on the plugin manager, the color schemes are located in different places. On Linux, default color schemes often live in <code>/usr/share/vim/vimcurrent/colors</code>. In this example, I&rsquo;m using PaperColor scheme, and I have it installed using vim-plug in <code>~/.vim/plugged/papercolor-theme</code>, and <code>colors/PaperColor.vim</code> is the file we&rsquo;re looking for.</p>

<p>Search for <code>StatusLine</code> and <code>StatusLineNC</code> (tip: you can do a whole word search in Vim by running <code>/\&lt;StatusLine\&gt;</code>), and note the values used (you might have to jump through a few variables if the color scheme author decided to be fancy). You&rsquo;re interested in <code>ctermbg</code>, <code>ctermfg</code>, <code>guibg</code>, and <code>guifg</code>.</p>

<p>You might find something like this:</p>

<pre><code>hi StatusLine ctermbg=24 ctermfg=254 guibg=#004f87 guifg=#e4e4e4
hi StatusLineNC ctermbg=252 ctermfg=238 guibg=#d0d0d0 guifg=#444444
</code></pre>

<p>Copy those lines to your <code>~/.vimrc</code>. Change <code>StatusLine</code> to <code>StatusLineTerm</code>, and change <code>StatusLineNC</code> to <code>StatusLineTermNC</code>:</p>

<pre><code>" Manually set the status line color.
hi StatusLineTerm ctermbg=24 ctermfg=254 guibg=#004f87 guifg=#e4e4e4
hi StatusLineTermNC ctermbg=252 ctermfg=238 guibg=#d0d0d0 guifg=#444444
</code></pre>

<p>Reload <code>~/.vimrc</code> (<code>:w | so %</code>), and the terminal mode status line should have the same colors as your color scheme:</p>

<p><img src="/images/posts/vim-terminal-mode-correct-colors.png" title="Screenshot of the terminal mode status line with corrected colors." ></p>

<p>Above, <code>hi</code> is a shorthand for <code>highlight</code>, which is used to define highlight group colors. <code>StatusLineTerm</code> and <code>StatusLineTermNC</code> define the highlight groups for terminal mode status line (in active and inactive windows respectively). Options <code>ctermbg</code> and <code>guibg</code> define the background color, and <code>ctermfg</code> and <code>guifg</code> are responsible for the foreground (text) color.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My book has been published!]]></title>
    <link href="http://www.rosipov.com/blog/my-book-has-been-published/"/>
    <updated>2018-12-25T12:00:00+08:00</updated>
    <id>http://www.rosipov.com/blog/my-book-has-been-published</id>
    <content type="html"><![CDATA[<p>Over the past six to nine months I&rsquo;ve been working on a book - <a href="https://amzn.to/2EfGaN5">Mastering Vim</a>. Mastering Vim is a passion project which is meant to take the reader (you) from zero to a hero (future you): from knowing nothing about Vim, to becoming a power user. I cover many of Vim&rsquo;s mysterious commands, philosophy behind the beloved editor, configuration tips, a plethora of community created plugins, as well as creating your own plugins.</p>

<p><img src="/images/posts/mastering-vim.png" title="A picture of a &ldquo;Mastering Vim&rdquo; cover." ></p>

<p>Mastering Vim was written with support from Packt Publishing and was kindly reviewed by Bram Moolenaar (<a href="https://moolenaar.net">website</a>) - the creator of Vim. Many people made this book possible, including <a href="https://vimconf.org">VimConf Japan</a> crew, who kindly hosted me earlier this year. Thank you to everyone for making Mastering Vim happen!</p>

<p>Give it a read and let me know what you think, <a href="https://amzn.to/2EfGaN5">Mastering Vim is available on Amazon</a>!</p>

<p>P.S: This post, like many others, is written in Vim.</p>
]]></content>
  </entry>
  
</feed>
