<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: notes and rants | Ruslan Osipov]]></title>
  <link href="http://www.rosipov.com/blog/categories/notes-and-rants/atom.xml" rel="self"/>
  <link href="http://www.rosipov.com/"/>
  <updated>2021-05-24T07:41:36-07:00</updated>
  <id>http://www.rosipov.com/</id>
  <author>
    <name><![CDATA[Ruslan Osipov]]></name>
    <email><![CDATA[ruslan@rosipov.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[750 words a day]]></title>
    <link href="http://www.rosipov.com/blog/750-words-a-day/"/>
    <updated>2014-10-29T10:51:35-07:00</updated>
    <id>http://www.rosipov.com/blog/750-words-a-day</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve had increased interest in writing throughout this year. In addition to
being a pleasant and fulfilling activity, it shown a number of benefits in my
everyday life and career:</p>

<ul>
<li>Composing emails became faster and easier. When you have to reply to a couple
of dozen emails a day, speed and attention to details matters. Writing more
taught me to write more concise emails which are easy to read.</li>
<li>Writing a lot isn&rsquo;t a problem anymore. If I have to write documentation,
comment code, or just put together a very long email - I&rsquo;m not put off by the
idea. I&rsquo;m excited about it.</li>
<li>Typing speed went up. <a href="http://www.rosipov.com/blog/why-should-you-learn-to-touch-type/">I already touch type</a>, and constant writing practice
increases the acquired speed. Fast typing makes life easier, speeding up
mundane tasks, freeing up brain power for more costly activities.</li>
<li>It&rsquo;s easy to keep a condensed work log to highlight the issues of the day.
Tough programming issues, &ldquo;Eureka!&rdquo; moments, meeting notes - this historical
data saved me hours or even days of repeating my mistakes.</li>
</ul>


<p>A while ago, I&rsquo;ve heard of a thing called <a href="http://750words.com/">&ldquo;750 words&rdquo;</a>, a site built around
a challenge to write 750 words a day in order to improve writing skills and
unleash creativity. This looked like a great idea, and I decided to give it a
shot. I prefer to keep my personal entries offline, and I decided not to use the
provided service, but to keep a set of plain text files on my local machine.
Which worked out just fine. It&rsquo;s all just text after all.</p>

<p>I lasted for 10 days in a row, which I am proud of (filling up approximately 3
pages a day was no easy task for me). I started of with silly entries about not
knowing what to write about, and finished with a piece of a fiction story.
That&rsquo;s a considerable improvement.</p>

<p>By the end of the challenge I was mentally exhausted. But it taught me a very
important lesson: the more you write, the better you become. And that&rsquo;s one of
the main reasons I keep crafting new entries for this blog.</p>

<p>This happened half a year ago, I just never got around to writing about it. I
will go ahead and start another 750 words spree today. Maybe this time I&rsquo;ll be
able to make it last for the whole month.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One more argument for 80 character limit]]></title>
    <link href="http://www.rosipov.com/blog/one-more-argument-for-80-character-limit/"/>
    <updated>2014-07-29T23:00:04-07:00</updated>
    <id>http://www.rosipov.com/blog/one-more-argument-for-80-character-limit</id>
    <content type="html"><![CDATA[<p>Limiting code to 80 (or 100 or 120) characters per line. It&rsquo;s a well-known
topic, and there&rsquo;s an overall consensus on the subject, not counting occasional
questions by newbies and odd cases. Most established tech companies have their
own line length guidelines. These are often dependent on a language, such as in
the case of Google with their 80 character Python and 100 character Java limits.</p>

<p>In this article, I won&rsquo;t be advocating all the usual arguments, such as easier
diff with version control software, or the ability to stack windows side by side
on wide screens. No, I believe that battle to be won quite a long time ago, the
topic is now closed. But something I didn&rsquo;t find mentioned in any of the
discussions is an interesting point from the world of writers and designers.</p>

<p>Ever since I started being interested in improving my writing skills, I found
article after article mention the importance of line length in reading.
Interestingly enough, this issue was raised in a world of literature. It had
been resolved long before programmers were fascinated with the desire to use up
rapidly expanding screen real estate.</p>

<p>I am talking about something known as &ldquo;measure&rdquo; in typography. It seems to be
the reason newspapers use narrow columns, or books leave such vast margins
around the text on a page. Here&rsquo;s an exempt from the <a href="http://en.wikipedia.org/wiki/Measure_(typography)">Wikipedia article</a>:</p>

<blockquote><p>Measure (or sometimes &ldquo;The Measure&rdquo;) in typography is the length of a line of
text. For a single-column design measure should ideally lie between 40 &amp; 80
characters. Many typographers consider the perfect measure to be 65
characters. If the lines are too short then the text becomes disjointed, if
they are too long the content loses rhythm as the reader searches for the
start of each line. Punctuation should preferably hang outside the measure.</p></blockquote>

<p>Most programming languages use special operators and keywords, which can be
considered &ldquo;punctuation&rdquo;. Some languages are more verbose (use more
punctuation), and some aren&rsquo;t. If you remove punctuation, the 80/100/120
character limit perfectly fits the standard time-honed &ldquo;measure&rdquo;.</p>

<p>Maybe I can use this as an additional argument the next time I have to explain
to a junior new hire why the character limits are so strictly enforced.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Abandoning WordPress for Octopress]]></title>
    <link href="http://www.rosipov.com/blog/abandoning-wordpress-for-octopress/"/>
    <updated>2014-07-22T00:04:15-07:00</updated>
    <id>http://www.rosipov.com/blog/abandoning-wordpress-for-octopress</id>
    <content type="html"><![CDATA[<p>I finally did it! I&rsquo;ve left the dark corners of WordPress in favor of
<a href="http://octopress.org">Octopress</a>, which seem to be the best system for my blogging needs.</p>

<h2>Why the migration?</h2>

<p>WordPress was a great host for me at one point - the community is fun and no
work is required for setup (I would rather not waste time fiddling with my blog
too much). But a number of things are off-putting:</p>

<ul>
<li>I don&rsquo;t like WYSIWYG editors and I don&rsquo;t like web editors. I try to use my
favorite editor for everything, including mail, documentation, note taking.
Even though WordPress allowed me to write my posts using Markdown, I still
didn&rsquo;t like not being able to use my favorite editor or environment.</li>
<li>Storing all the entries in a MySQL database is not favorable. I am writing
text, why would I pick any other format to store what I wrote?</li>
<li>Over the years my blog became increasingly slow, and in order to have a
reasonably fast site I needed to pay quite a sum of money. I am not ready for
such a commitment, since I only occasionally update this blog.</li>
</ul>


<p>On the other hand, Octopress (which is based on Jekyll, a static site
generator) has all of these concerns covered:</p>

<ul>
<li>I can write by creating simple Markdown documents. It doesn&rsquo;t matter where I
write, or how I write. This enables me to use an editor of my choice.</li>
<li>Plain text is universal. It can be viewed by a human, edited in any piece of
software, printed out, emailed, piped to a Linux program - just about
anything really.</li>
<li>Static sites are ridiculously fast. There&rsquo;s no preprocessing and no
rendering.  The only real speed limit is network latency. In addition, GitHub
lets you host static sites for free. What else could you ask for?</li>
</ul>


<h2>The process is painless</h2>

<p>Switching from WordPress to Octopress was very easy, and it took me only a few
hours (spread out throughout one weekend). Some highlights:</p>

<ol>
<li>Comments in Octopress are handled by <a href="https://disqus.com">Disqus</a>, and I had to set that up
on my WordPress blog before transitioning in order to transfer all the
comments.</li>
<li>I used the <a href="https://github.com/benbalter/wordpress-to-jekyll-exporter">WordPress to Jekyll Exporter</a> tool to export all my posts
from WordPress to Markdown (with meta-data which Octopress understands). I only
had a bit over 50 posts to worry about, so the process was complete in an
instant.</li>
<li>I ran some custom Vim macros to remove and change some excess meta data, as
well as clean up Markdown formatting. I am a perfectionist, and the exporter
tool left me with a poorly formatted document. I couldn&rsquo;t let that happen.</li>
</ol>


<h2>Results are breathtaking</h2>

<p>After only a few hours of work, I had a lightning fast, simple, and pragmatic
blog. There is no excess configuration, comments are handled externally, and
the source code for the site and articles is available on GitHub. I am able to
write my posts using Markdown, in my favorite editor, and use git to publish
the resulting articles.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I threw away my "To Do" list]]></title>
    <link href="http://www.rosipov.com/blog/why-i-threw-away-my-to-do-list/"/>
    <updated>2014-06-07T12:11:54-07:00</updated>
    <id>http://www.rosipov.com/blog/why-i-threw-away-my-to-do-list</id>
    <content type="html"><![CDATA[<p>I enjoy organizing things. I am accustomed to keeping neat &ldquo;To Do&rdquo; lists,
written notes, and just about anything that will let me arrange my tasks
instead of actually accomplishing them. I recently stopped writing things down,
and the results were pleasantly surprising&hellip;</p>

<p>I was keeping a list of things I would need to complete. I organized it by
priorities, and at some point I even used Gina&rsquo;s fancy
&ldquo;<a href="http://todotxt.com">Todo.txt</a>&rdquo; wrapper for managing it.</p>

<p>What I realized after using such a scheme, is that my list was growing longer
and longer with every week. After a while, the number of tasks became hard to
manage, and the number of tasks became permanent residents on my task list. Why
did this happen? Well for one, I turned my list into a &ldquo;check box machine&rdquo;.
Complete a task, check off a check box. There was no mindfulness about it: I
was just completing task after task. &ldquo;All right, this one is done, let&rsquo;s move
to a next one.&rdquo; - this is what was constantly running through my head.
Secondly, by writing down a task on my list in the first place, my brain would
register it as being completed, and then I&rsquo;d go on with my day. Needless to
say, certain tasks would sit on my list for an indefinite amount of time.</p>

<p>After a while, I deleted my &ldquo;To Do&rdquo; list. Instead, every day I ask myself a
simple question: &ldquo;What should I do today to succeed at what I am trying to
accomplish?&rdquo;. This way, work becomes achievement driven. I started choosing
tasks which provide the biggest impact, dedicating some days just to minor
&ldquo;clean up&rdquo; tasks which I didn&rsquo;t deem important enough for productive days.</p>

<p>I threw away my &ldquo;To Do&rdquo; list, and I am glad I did it. I love being mindful
about my day, I know exactly what I need to accomplish in order to succeed.
It&rsquo;s easy to get caught up in a daily route, and forget that your life isn&rsquo;t
just a list of things to do, but a number of goals you want to reach. By not
relying on a written manifesto cluttered with tasks, I am forced to concentrate
on the bigger picture, where what I set out to accomplish has the highest
possible impact on my life and career.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why should you learn to touch type?]]></title>
    <link href="http://www.rosipov.com/blog/why-should-you-learn-to-touch-type/"/>
    <updated>2014-05-31T12:33:15-07:00</updated>
    <id>http://www.rosipov.com/blog/why-should-you-learn-to-touch-type</id>
    <content type="html"><![CDATA[<p>I have a confession to make. Up until recently I did not know how to touch
type. I would do what most people around me did: push the keys however which
way I felt; make a typo; look down at the keyboard to find the letter I
mistyped; repeat the whole process. I would put out up to 50 words per minute
with this method, with an embarrassing error rate (which usually went up if I
was showing something to someone). I am now terrified to think about those
times.</p>

<p>It wasn&rsquo;t until I stumbled upon Steve Yegge&rsquo;s article
&ldquo;<a href="http://steve-yegge.blogspot.com/2008/09/programmings-dirtiest-little-secret.html">Programming&rsquo;s Dirtiest Little Secret</a>&rdquo;, that I fully understood the
implications of not developing proper typing technique.</p>

<p>Picture the following: programmer Clara is working in a small software company.
Clara doesn&rsquo;t use any fancy IDEs nor extendible editors like emacs or vim.
Clara uses Windows&#8217; default &ldquo;Notepad&rdquo; program to write and edit her source
code. She is defending herself by saying that she doesn&rsquo;t need any advanced
features, and that she knows every keyword she needs to use by heart. She
spends hours tediously searching for the files on her computer, opening them in
Notepad, holding down arrow keys to get to whichever chunk of code she needs to
edit (or even worse - lifts her hands off a keyboard and uses a mouse to
navigate the file). Her editor only goes back one step with the &ldquo;undo&rdquo;
operation&hellip; But Clara has good memory and she can re-type the code she erased.</p>

<p>What do you think of Clara? You might say that she is wasting her time and she
should learn herself a robust editor. And of course, you will be right.</p>

<p>One day, Clara&rsquo;s company hired a new tech lead - Jane. Jane noticed that Clara
is very slow at accomplishing tasks assigned to her. So Jane showed Clara how
to save a lot of time by using an advanced editor she uses. Suddenly Clara
discovered a whole new world in front of her: it became much easier to read the
code with parts of it highlighted, and the new text editor showed her when she
would make a typo or a big error - even before Clara compiled the code. And
Clara didn&rsquo;t even have to re-invent the code she deleted, she could just travel
down the undo tree back to the time when she erased the code: all of a sudden
it felt like she had access to a time machine! Jane even told her that there
are plugins which can write some code for Clara! How amazing is that? It took a
while for Clara to learn how to use the new editor, but after a few months,
Clara became almost as fast at doing her job as Jane. Maybe Clara even received
a promotion from doing so many things in a short period of time.</p>

<p>If you don&rsquo;t know how to touch type - you are Clara. You are wasting your time.
You look ridiculous to your colleagues when you stare down at your keyboard
while typing. Interviewers secretly laugh at you when you make five errors in a
four-letter word. You are frustrated by even the remote possibility of having
to write more than you absolutely have to.</p>

<p>Writing is a big part of the job as a software engineer. You write code,
documentation, ask questions. Most importantly, you have to communicate with
your colleagues and users. Most of this interaction is written: it&rsquo;s a great
form of communication for the job - written notes can be saved and searched
through later. As a software engineer, you bring value to your company and its
users. And due to the arcane nature of the craft, communication becomes
crucial. You can be the smartest programmer in the world and you can write the
best piece of software out there, but no one will know about it unless you
communicate why is it so great, what it does, and how to use it.</p>

<p>By learning how to type properly, you turn a keyboard into an extension of your
hand. All you have to do in order to type - is just think of words and
sentences. Your muscle memory does the rest.</p>

<p>I now type somewhere between 60 and 80 words per minute with what I find to be
a low error rate - and I have been touch typing now for little over a month. If
you care for your craft, you have no excuse for not mastering a proper typing
technique.</p>
]]></content>
  </entry>
  
</feed>
